{
  "api/GameJamStarterKit.AnimationParameter.html": {
    "href": "api/GameJamStarterKit.AnimationParameter.html",
    "title": "Class AnimationParameter | Game Jam Starter Kit Documentation",
    "keywords": "Class AnimationParameter A serialized Animation Parameter Inheritance System.Object AnimationParameter Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public class AnimationParameter Fields BoolValue Declaration public bool BoolValue Field Value Type Description System.Boolean FloatValue Declaration public float FloatValue Field Value Type Description System.Single IntValue Declaration public int IntValue Field Value Type Description System.Int32 Key Parameter Key Declaration public string Key Field Value Type Description System.String ParameterType Type of the parameter Declaration public AnimatorControllerParameterType ParameterType Field Value Type Description AnimatorControllerParameterType Methods Set(Animator) Sets the animation parameter on the given animator. Does nothing if the animator does not have the parameter. Declaration public void Set(Animator animator) Parameters Type Name Description Animator animator Animator to set the parameter of"
  },
  "api/GameJamStarterKit.AnimatorEventBridge.html": {
    "href": "api/GameJamStarterKit.AnimatorEventBridge.html",
    "title": "Class AnimatorEventBridge | Game Jam Starter Kit Documentation",
    "keywords": "Class AnimatorEventBridge Allows for Animations to call UnityEvents using a list of AnimatorEventData Inheritance System.Object AnimatorEventBridge Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public class AnimatorEventBridge : MonoBehaviour Fields EventMap Events the attached animator can call Declaration public List<AnimatorEventData> EventMap Field Value Type Description List < AnimatorEventData > Methods CallEvent(String) Calls the event mapped to the key given. Does nothing if the key is not found. Declaration public void CallEvent(string key) Parameters Type Name Description System.String key event key CallEventWithDebugLog(String) Calls the event mapped to the key given. logs a debug message when called. Declaration public void CallEventWithDebugLog(string key) Parameters Type Name Description System.String key event key CallEventWithLogWarning(String) Calls the event mapped to the key given. Logs a warning if the event is not found. Declaration public void CallEventWithLogWarning(string key) Parameters Type Name Description System.String key event key"
  },
  "api/GameJamStarterKit.AnimatorEventData.html": {
    "href": "api/GameJamStarterKit.AnimatorEventData.html",
    "title": "Class AnimatorEventData | Game Jam Starter Kit Documentation",
    "keywords": "Class AnimatorEventData Maps a UnityEvent to a key. Inheritance System.Object AnimatorEventData Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public class AnimatorEventData Fields Event Declaration public UnityEvent Event Field Value Type Description UnityEvent EventKey Declaration public string EventKey Field Value Type Description System.String"
  },
  "api/GameJamStarterKit.AnimatorExtensions.html": {
    "href": "api/GameJamStarterKit.AnimatorExtensions.html",
    "title": "Class AnimatorExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class AnimatorExtensions Useful extensions for Animators Inheritance System.Object AnimatorExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class AnimatorExtensions Methods HasParameter(Animator, String) returns if the given animator has a parameter with the given name or not. Declaration public static bool HasParameter(this Animator animator, string parameter) Parameters Type Name Description Animator animator this System.String parameter parameter to search for Returns Type Description System.Boolean true if this has a parameter with the given key HasParameterWithType(Animator, String, AnimatorControllerParameterType) returns if the given animator has a parameter with the given type or not. Declaration public static bool HasParameterWithType(this Animator animator, string parameter, AnimatorControllerParameterType type) Parameters Type Name Description Animator animator this System.String parameter parameter to search for AnimatorControllerParameterType type type of the parameter Returns Type Description System.Boolean true if this has a parameter with the given key and type SetParameter(Animator, AnimationParameter) Sets the parameter using a serializable AnimationParameter. calls parameter.Set(this) Declaration public static void SetParameter(this Animator animator, AnimationParameter parameter) Parameters Type Name Description Animator animator this AnimationParameter parameter parameter to set."
  },
  "api/GameJamStarterKit.AsyncUnityUtility.html": {
    "href": "api/GameJamStarterKit.AsyncUnityUtility.html",
    "title": "Class AsyncUnityUtility | Game Jam Starter Kit Documentation",
    "keywords": "Class AsyncUnityUtility Utility class for using async/await with unity. Inheritance System.Object AsyncUnityUtility Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class AsyncUnityUtility Properties IsQuitTokenRequested Returns GetQuittingCancelToken() .IsCancellationRequested Declaration public static bool IsQuitTokenRequested { get; } Property Value Type Description System.Boolean Methods GetQuittingCancelToken() Get a generic cancellation token to cancel tasks when Application.quitting is called. Declaration public static CancellationToken GetQuittingCancelToken() Returns Type Description CancellationToken returns the cancellation token for Application.quitting HoldIfPaused() Waits until Time.timeScale is greater than 0. Declaration public static Task HoldIfPaused() Returns Type Description Task Task completes when TIme.timeScale is > 0 WaitForSeconds(Single) A shortcut for Task.Delay but with seconds instead of milliseconds. Declaration public static Task WaitForSeconds(float seconds) Parameters Type Name Description System.Single seconds seconds to wait Returns Type Description Task task completes after the seconds passed"
  },
  "api/GameJamStarterKit.Attributes.ExecuteOnEditorHierarchyChangeAttribute.html": {
    "href": "api/GameJamStarterKit.Attributes.ExecuteOnEditorHierarchyChangeAttribute.html",
    "title": "Class ExecuteOnEditorHierarchyChangeAttribute | Game Jam Starter Kit Documentation",
    "keywords": "Class ExecuteOnEditorHierarchyChangeAttribute Executes the marked method when the editor's hierarchy changes Inheritance System.Object ExecuteOnEditorHierarchyChangeAttribute Namespace : GameJamStarterKit.Attributes Assembly : cs.temp.dll.dll Syntax public class ExecuteOnEditorHierarchyChangeAttribute : Attribute"
  },
  "api/GameJamStarterKit.Attributes.ExecuteOnEditorUpdateAttribute.html": {
    "href": "api/GameJamStarterKit.Attributes.ExecuteOnEditorUpdateAttribute.html",
    "title": "Class ExecuteOnEditorUpdateAttribute | Game Jam Starter Kit Documentation",
    "keywords": "Class ExecuteOnEditorUpdateAttribute Executes the attached method when the EditorApplication.update is called. (Every frame) Inheritance System.Object ExecuteOnEditorUpdateAttribute Namespace : GameJamStarterKit.Attributes Assembly : cs.temp.dll.dll Syntax public class ExecuteOnEditorUpdateAttribute : Attribute"
  },
  "api/GameJamStarterKit.Attributes.html": {
    "href": "api/GameJamStarterKit.Attributes.html",
    "title": "Namespace GameJamStarterKit.Attributes | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Attributes Classes ExecuteOnEditorHierarchyChangeAttribute Executes the marked method when the editor's hierarchy changes ExecuteOnEditorUpdateAttribute Executes the attached method when the EditorApplication.update is called. (Every frame) KitButtonAttribute Provides a method attribute which draws a button in the inspector to call the method. KitOnlyPrefabAsset Ensures a field can only be a prefab asset"
  },
  "api/GameJamStarterKit.Attributes.KitButtonAttribute.html": {
    "href": "api/GameJamStarterKit.Attributes.KitButtonAttribute.html",
    "title": "Class KitButtonAttribute | Game Jam Starter Kit Documentation",
    "keywords": "Class KitButtonAttribute Provides a method attribute which draws a button in the inspector to call the method. Inheritance System.Object KitButtonAttribute Namespace : GameJamStarterKit.Attributes Assembly : cs.temp.dll.dll Syntax public class KitButtonAttribute : Attribute Constructors KitButtonAttribute(StandardSize) Adds a button to the inspector with a given size using the method name as the text. Declaration public KitButtonAttribute(StandardSize buttonSize = StandardSize.Small) Parameters Type Name Description StandardSize buttonSize Size of the button KitButtonAttribute(String, StandardSize) Adds a button to the inspector with a given display text and size. Declaration public KitButtonAttribute(string text, StandardSize buttonSize = StandardSize.Small) Parameters Type Name Description System.String text text to display on the button StandardSize buttonSize Size of the button Fields ButtonSize Size of the button Declaration public StandardSize ButtonSize Field Value Type Description StandardSize Text Text for the button Declaration public string Text Field Value Type Description System.String"
  },
  "api/GameJamStarterKit.Attributes.KitOnlyPrefabAsset.html": {
    "href": "api/GameJamStarterKit.Attributes.KitOnlyPrefabAsset.html",
    "title": "Class KitOnlyPrefabAsset | Game Jam Starter Kit Documentation",
    "keywords": "Class KitOnlyPrefabAsset Ensures a field can only be a prefab asset Inheritance System.Object KitOnlyPrefabAsset Namespace : GameJamStarterKit.Attributes Assembly : cs.temp.dll.dll Syntax public class KitOnlyPrefabAsset : PropertyAttribute"
  },
  "api/GameJamStarterKit.Audio.AudioPool.html": {
    "href": "api/GameJamStarterKit.Audio.AudioPool.html",
    "title": "Class AudioPool | Game Jam Starter Kit Documentation",
    "keywords": "Class AudioPool Extends BasePool<T> providing an easy singleton to play 2d and 3d sound clips or AudioClipCollection Inheritance System.Object BasePool < AudioSource > AudioPool Inherited Members BasePool<AudioSource>.PoolSize BasePool<AudioSource>.GetNext() BasePool<AudioSource>.RegeneratePool() Namespace : GameJamStarterKit.Audio Assembly : cs.temp.dll.dll Syntax public class AudioPool : BasePool<AudioSource> Properties Instance Returns the current instance of this audio pool Declaration public static AudioPool Instance { get; } Property Value Type Description AudioPool Methods Awake() Declaration protected void Awake() InitializeComponent(AudioSource) Declaration protected override void InitializeComponent(AudioSource component) Parameters Type Name Description AudioSource component Overrides GameJamStarterKit.BasePool<AudioSource>.InitializeComponent(AudioSource) Play2D(AudioClip, Boolean, Single, Single, Single) Plays an audio clip in 2D Declaration public static AudioSource Play2D(AudioClip clip, bool looping = false, float volume = 1F, float pitch = 1F, float pitchVariance = 0F) Parameters Type Name Description AudioClip clip clip to play System.Boolean looping is this clip looping? System.Single volume scale of the clips volume System.Single pitch pitch to play the sound at System.Single pitchVariance variance in pitch for this clip. 0 will have no variance. Returns Type Description AudioSource Play3D(AudioClip, Vector3, Boolean, Single, Single, Single, Single, AudioRolloffMode) Plays an audio clip in 3D Declaration public static AudioSource Play3D(AudioClip clip, Vector3 position, bool looping = false, float volume = 1F, float pitch = 1F, float pitchVariance = 0F, float spatialBlend = 1F, AudioRolloffMode rollOffMode = null) Parameters Type Name Description AudioClip clip clip to play Vector3 position the position to play this sound at System.Boolean looping is this clip looping? System.Single volume scale the clips volume System.Single pitch pitch to play the sound at System.Single pitchVariance variance in pitch for this clip. 0 will have no variance. System.Single spatialBlend spatial blending. 0f = 2D, 1f = 3D AudioRolloffMode rollOffMode the roll off mode to use for this source. Returns Type Description AudioSource"
  },
  "api/GameJamStarterKit.Audio.BackgroundMusic.html": {
    "href": "api/GameJamStarterKit.Audio.BackgroundMusic.html",
    "title": "Class BackgroundMusic | Game Jam Starter Kit Documentation",
    "keywords": "Class BackgroundMusic A Singleton used to play audio clips or AudioClipCollection in the background. Supports fade in, fade out, and crossfade between clips Inheritance System.Object SingletonBehaviour < BackgroundMusic > BackgroundMusic PersistentBackgroundMusic Inherited Members SingletonBehaviour<BackgroundMusic>.Instance SingletonBehaviour<BackgroundMusic>.Awake() Namespace : GameJamStarterKit.Audio Assembly : cs.temp.dll.dll Syntax public class BackgroundMusic : SingletonBehaviour<BackgroundMusic> Fields AlwaysFadeIn Declaration public bool AlwaysFadeIn Field Value Type Description System.Boolean ClipCollection Current collection of clips being played Declaration public AudioClipCollection ClipCollection Field Value Type Description AudioClipCollection CrossFade Should cross fade between clips? Declaration public bool CrossFade Field Value Type Description System.Boolean CrossFadeDuration How long cross fading takes Declaration public float CrossFadeDuration Field Value Type Description System.Single FadeIn Should new clips fade in? Declaration public bool FadeIn Field Value Type Description System.Boolean FadeInDuration How long in seconds fading in takes Declaration public float FadeInDuration Field Value Type Description System.Single FadeOut Should clips fade out? Declaration public bool FadeOut Field Value Type Description System.Boolean FadeOutDuration How long in seconds fading out takes Declaration public float FadeOutDuration Field Value Type Description System.Single Looping Should the music be looping? This means the song will not change unless manually told to. Declaration public bool Looping Field Value Type Description System.Boolean PlayOnStart Should this start playing on start? Declaration public bool PlayOnStart Field Value Type Description System.Boolean Methods PlayClip(AudioClip, Single) Immediately starts the clip, respecting fade settings. Declaration public void PlayClip(AudioClip clip, float volume) Parameters Type Name Description AudioClip clip clip to play System.Single volume volume of the clip PlayCollection(AudioClipCollection, Single) Plays a collection of AudioClips Declaration public void PlayCollection(AudioClipCollection clipCollection, float volume = 1F) Parameters Type Name Description AudioClipCollection clipCollection collection to play System.Single volume volume to play the clips at. PlayOneShot(AudioClip, Single, Boolean) Plays a one off audio clip. Declaration public void PlayOneShot(AudioClip clip, float volume = 1F, bool looping = false) Parameters Type Name Description AudioClip clip clip to play System.Single volume volume of the clip System.Boolean looping if the clip should loop StartNextClip() Immediately starts the next clip, respecting fade settings. Declaration public void StartNextClip()"
  },
  "api/GameJamStarterKit.Audio.Editor.BackgroundMusicEditor.html": {
    "href": "api/GameJamStarterKit.Audio.Editor.BackgroundMusicEditor.html",
    "title": "Class BackgroundMusicEditor | Game Jam Starter Kit Documentation",
    "keywords": "Class BackgroundMusicEditor Inheritance System.Object BackgroundMusicEditor Namespace : GameJamStarterKit.Audio.Editor Assembly : cs.temp.dll.dll Syntax public class BackgroundMusicEditor : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/GameJamStarterKit.Audio.Editor.html": {
    "href": "api/GameJamStarterKit.Audio.Editor.html",
    "title": "Namespace GameJamStarterKit.Audio.Editor | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Audio.Editor Classes BackgroundMusicEditor"
  },
  "api/GameJamStarterKit.Audio.html": {
    "href": "api/GameJamStarterKit.Audio.html",
    "title": "Namespace GameJamStarterKit.Audio | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Audio Classes AudioPool Extends BasePool<T> providing an easy singleton to play 2d and 3d sound clips or AudioClipCollection BackgroundMusic A Singleton used to play audio clips or AudioClipCollection in the background. Supports fade in, fade out, and crossfade between clips PersistentBackgroundMusic Extends BackgroundMusic calling DontDestroyOnLoad during awake allowing this to persist between scene transitions."
  },
  "api/GameJamStarterKit.Audio.PersistentBackgroundMusic.html": {
    "href": "api/GameJamStarterKit.Audio.PersistentBackgroundMusic.html",
    "title": "Class PersistentBackgroundMusic | Game Jam Starter Kit Documentation",
    "keywords": "Class PersistentBackgroundMusic Extends BackgroundMusic calling DontDestroyOnLoad during awake allowing this to persist between scene transitions. Inheritance System.Object SingletonBehaviour < BackgroundMusic > BackgroundMusic PersistentBackgroundMusic Inherited Members BackgroundMusic.ClipCollection BackgroundMusic.PlayOnStart BackgroundMusic.Looping BackgroundMusic.FadeIn BackgroundMusic.FadeInDuration BackgroundMusic.AlwaysFadeIn BackgroundMusic.FadeOut BackgroundMusic.FadeOutDuration BackgroundMusic.CrossFade BackgroundMusic.CrossFadeDuration BackgroundMusic.PlayCollection(AudioClipCollection, Single) BackgroundMusic.PlayOneShot(AudioClip, Single, Boolean) BackgroundMusic.StartNextClip() BackgroundMusic.PlayClip(AudioClip, Single) SingletonBehaviour<BackgroundMusic>.Instance Namespace : GameJamStarterKit.Audio Assembly : cs.temp.dll.dll Syntax public class PersistentBackgroundMusic : BackgroundMusic Methods Awake() Declaration protected override void Awake() Overrides GameJamStarterKit.SingletonBehaviour<GameJamStarterKit.Audio.BackgroundMusic>.Awake()"
  },
  "api/GameJamStarterKit.AudioClipCollection.html": {
    "href": "api/GameJamStarterKit.AudioClipCollection.html",
    "title": "Class AudioClipCollection | Game Jam Starter Kit Documentation",
    "keywords": "Class AudioClipCollection A collection of AudioClips that can be played in sequence or randomly. Inheritance System.Object AudioClipCollection Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public class AudioClipCollection Constructors AudioClipCollection() Creates a new audio clip collection with no clips. Declaration public AudioClipCollection() AudioClipCollection(Boolean, AudioClip[]) Declaration public AudioClipCollection(bool randomized = false, params AudioClip[] clips) Parameters Type Name Description System.Boolean randomized AudioClip [] clips Fields RandomizedCollection If this collection should return a random clip or not. Declaration public bool RandomizedCollection Field Value Type Description System.Boolean Properties IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean Methods AddClip(AudioClip) Adds a clip to this collection Declaration public void AddClip(AudioClip clip) Parameters Type Name Description AudioClip clip ClearCollection() Clears all the clips from this collection. Declaration public void ClearCollection() GetClip() Returns the next clip in this collection. Returns a random clip if the collection is randomized. Declaration public AudioClip GetClip() Returns Type Description AudioClip GetClip(Boolean) Declaration public AudioClip GetClip(bool forceRandom) Parameters Type Name Description System.Boolean forceRandom return a random clip regardless of if this collection is randomized or not Returns Type Description AudioClip RemoveClip(AudioClip) Removes a clip from this collection. Declaration public void RemoveClip(AudioClip clip) Parameters Type Name Description AudioClip clip"
  },
  "api/GameJamStarterKit.AudioSourceCallback.html": {
    "href": "api/GameJamStarterKit.AudioSourceCallback.html",
    "title": "Class AudioSourceCallback | Game Jam Starter Kit Documentation",
    "keywords": "Class AudioSourceCallback Adds callbacks for when an attached audio source starts and stops playback. Inheritance System.Object AudioSourceCallback Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public class AudioSourceCallback : MonoBehaviour Fields OnPlay invoked when the attached audio source begins playing Declaration public AudioSourceUnityEvent OnPlay Field Value Type Description AudioSourceUnityEvent OnStop invoked when the attached audio source stops playing Declaration public AudioSourceUnityEvent OnStop Field Value Type Description AudioSourceUnityEvent Source Declaration public AudioSource Source Field Value Type Description AudioSource"
  },
  "api/GameJamStarterKit.AudioSourceExtensions.html": {
    "href": "api/GameJamStarterKit.AudioSourceExtensions.html",
    "title": "Class AudioSourceExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class AudioSourceExtensions Useful extensions for AudioSources Inheritance System.Object AudioSourceExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class AudioSourceExtensions Methods Fade(AudioSource, Single, Single) Coroutine to fade an audio source over a duration to the target volume. Declaration public static IEnumerator Fade(AudioSource source, float duration, float targetVolume) Parameters Type Name Description AudioSource source source to fade System.Single duration how long the fade takes in seconds System.Single targetVolume the target volume to fade to Returns Type Description IEnumerator FadeIn(AudioSource, Single, Single) Fades in an audio source Declaration public static void FadeIn(this AudioSource source, float duration, float targetVolume = 1F) Parameters Type Name Description AudioSource source this System.Single duration how long the fade in takes in seconds System.Single targetVolume the target volume after fully faded in FadeOut(AudioSource, Single) Fades out an audio source Declaration public static void FadeOut(this AudioSource source, float duration) Parameters Type Name Description AudioSource source this System.Single duration how long the fade out takes in seconds FadeTo(AudioSource, Single, Single) Fades the audio source to the given volume Declaration public static void FadeTo(this AudioSource source, float duration, float targetVolume) Parameters Type Name Description AudioSource source this System.Single duration how long the fade takes in seconds System.Single targetVolume the target volume GetCallback(AudioSource) Returns the attached AudioSourceCallback, creates one and attaches it if there is none. Declaration public static AudioSourceCallback GetCallback(this AudioSource source) Parameters Type Name Description AudioSource source this Returns Type Description AudioSourceCallback AudioSourceCallback"
  },
  "api/GameJamStarterKit.AudioSourceUnityEvent.html": {
    "href": "api/GameJamStarterKit.AudioSourceUnityEvent.html",
    "title": "Class AudioSourceUnityEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class AudioSourceUnityEvent Inheritance System.Object AudioSourceUnityEvent Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public class AudioSourceUnityEvent : UnityEvent<AudioSource>"
  },
  "api/GameJamStarterKit.BasePool-1.html": {
    "href": "api/GameJamStarterKit.BasePool-1.html",
    "title": "Class BasePool<T> | Game Jam Starter Kit Documentation",
    "keywords": "Class BasePool<T> Starting point to creating a pool of objects. See GameJamStarterKit.Audio.AudioPool for an example usage. Inheritance System.Object BasePool<T> AudioPool Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public abstract class BasePool<T> : MonoBehaviour where T : Component Type Parameters Name Description T type of this pool Fields PoolSize How many GameObjects this pool has Declaration public int PoolSize Field Value Type Description System.Int32 Methods GetNext() Gets the next object in the pool. Remember to call SetActive(true) on the gameObject. Declaration public T GetNext() Returns Type Description T InitializeComponent(T) Declaration protected abstract void InitializeComponent(T component) Parameters Type Name Description T component RegeneratePool() Destroys every item in the pool and re-creates them. Declaration public void RegeneratePool()"
  },
  "api/GameJamStarterKit.Camera.CameraExtensions.html": {
    "href": "api/GameJamStarterKit.Camera.CameraExtensions.html",
    "title": "Class CameraExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class CameraExtensions Extension methods for UnityEngine.Camera Inheritance System.Object CameraExtensions Namespace : Camera Assembly : cs.temp.dll.dll Syntax public static class CameraExtensions Methods StartShake(UnityEngine.Camera, CameraShakeProfile) Starts a camera shake using the given profile Declaration public static void StartShake(this UnityEngine.Camera camera, CameraShakeProfile profile) Parameters Type Name Description UnityEngine.Camera camera this CameraShakeProfile profile profile to use for the shake"
  },
  "api/GameJamStarterKit.Camera.CameraShakeProfile.html": {
    "href": "api/GameJamStarterKit.Camera.CameraShakeProfile.html",
    "title": "Class CameraShakeProfile | Game Jam Starter Kit Documentation",
    "keywords": "Class CameraShakeProfile Scriptable Object that holds the parameters of a camera shake. Inheritance System.Object CameraShakeProfile Namespace : Camera Assembly : cs.temp.dll.dll Syntax public class CameraShakeProfile : ScriptableObject Fields FadeInTime How long to fade in a shake, in seconds. Declaration public float FadeInTime Field Value Type Description System.Single FadeOutTime How long to fade out a shake, in seconds. Declaration public float FadeOutTime Field Value Type Description System.Single GlobalScalar Scales the entire shake. Useful for doing distance based shake intensity Declaration public float GlobalScalar Field Value Type Description System.Single Magnitude Magnitude of the shake. More intense with higher values. Declaration public float Magnitude Field Value Type Description System.Single PositionScalar How much this shake influences the position per axis. Declaration public Vector3 PositionScalar Field Value Type Description Vector3 RotationScalar How much this shake influences the rotation per axis. Declaration public Vector3 RotationScalar Field Value Type Description Vector3 Roughness Roughness of the shake. Higher values are more jerky / violent. Declaration public float Roughness Field Value Type Description System.Single Properties Duration Returns the duration of this shake (fade in + fade out) Declaration public float Duration { get; } Property Value Type Description System.Single Methods MakeProfile(Single, Single, Single, Single) Creates a temporary camera shake profile using the parameters given Declaration public static CameraShakeProfile MakeProfile(float magnitude = 1F, float roughness = 1F, float fadeInTime = 1F, float fadeOutTime = 1F) Parameters Type Name Description System.Single magnitude Magnitude of the shake. More intense with higher values. System.Single roughness Roughness of the shake. Higher values are more jerky / violent. System.Single fadeInTime Time to fade in the shake, in seconds. System.Single fadeOutTime Time to fade out the shake, in seconds. Returns Type Description CameraShakeProfile returns a temporary shake profile MakeProfile(Single, Single, Single, Single, Vector3, Vector3) Creates a temporary camera shake profile using the parameters given Declaration public static CameraShakeProfile MakeProfile(float magnitude, float roughness, float fadeInTime, float fadeOutTime, Vector3 positionScalar, Vector3 rotationScalar) Parameters Type Name Description System.Single magnitude Magnitude of the shake. More intense with higher values. System.Single roughness Roughness of the shake. Higher values are more jerky / violent. System.Single fadeInTime Time to fade in the shake, in seconds. System.Single fadeOutTime Time to fade out the shake, in seconds. Vector3 positionScalar Shake positional influence per axis Vector3 rotationScalar Shake rotation influence per axis Returns Type Description CameraShakeProfile returns a temporary shake profile"
  },
  "api/GameJamStarterKit.Camera.CameraShaker.html": {
    "href": "api/GameJamStarterKit.Camera.CameraShaker.html",
    "title": "Class CameraShaker | Game Jam Starter Kit Documentation",
    "keywords": "Class CameraShaker A Component used to shake the camera using a CameraShakeProfile Inheritance System.Object CameraShaker Namespace : Camera Assembly : cs.temp.dll.dll Syntax public class CameraShaker : MonoBehaviour Fields Profile Declaration public CameraShakeProfile Profile Field Value Type Description CameraShakeProfile Methods StartShake() Starts a camera shake using the Profile field on this CameraShaker Declaration public void StartShake() StartShake(CameraShakeProfile) Starts a camera shake using the provided profile Declaration public void StartShake(CameraShakeProfile profile) Parameters Type Name Description CameraShakeProfile profile profile to use"
  },
  "api/GameJamStarterKit.Camera.html": {
    "href": "api/GameJamStarterKit.Camera.html",
    "title": "Namespace GameJamStarterKit.Camera | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Camera Classes CameraExtensions Extension methods for UnityEngine.Camera CameraShakeProfile Scriptable Object that holds the parameters of a camera shake. CameraShaker A Component used to shake the camera using a CameraShakeProfile SpringArm Provides a SpringArmComponent similar to Unreal Engine 4's SpringArmComponent. Spring arm tries to maintain it's children a fixed distance away from the parent but retracts when colliding and springs back when no longer colliding."
  },
  "api/GameJamStarterKit.Camera.SpringArm.html": {
    "href": "api/GameJamStarterKit.Camera.SpringArm.html",
    "title": "Class SpringArm | Game Jam Starter Kit Documentation",
    "keywords": "Class SpringArm Provides a SpringArmComponent similar to Unreal Engine 4's SpringArmComponent. Spring arm tries to maintain it's children a fixed distance away from the parent but retracts when colliding and springs back when no longer colliding. Inheritance System.Object SpringArm Namespace : Camera Assembly : cs.temp.dll.dll Syntax public class SpringArm : MonoBehaviour Fields ArmLagInEditor Lag in editor? This will change the position. Declaration public bool ArmLagInEditor Field Value Type Description System.Boolean DrawDebugLines Enables drawing of debug lines Declaration public bool DrawDebugLines Field Value Type Description System.Boolean EndOffset Offset for the end position of the probe. Declaration public Vector3 EndOffset Field Value Type Description Vector3 LagLocation Lag the location of the arm? Declaration public bool LagLocation Field Value Type Description System.Boolean LagRotation Lag the rotation of the arm relative to the parent? Declaration public bool LagRotation Field Value Type Description System.Boolean LocationLagSpeed How quickly the location lag moves. Declaration public float LocationLagSpeed Field Value Type Description System.Single MaxLocationDistance Maximum distance the location can lag behind. 0 = disabled Declaration public float MaxLocationDistance Field Value Type Description System.Single MaxRotationAngle Maximum angle the rotation can lag behind. 0 = disabled Declaration public float MaxRotationAngle Field Value Type Description System.Single ProbeDistance How far the probe should be from this objects position. Declaration public float ProbeDistance Field Value Type Description System.Single ProbeLayer Layers the probe should check against Declaration public LayerMask ProbeLayer Field Value Type Description LayerMask ProbeRadius The radius of the probe Declaration public float ProbeRadius Field Value Type Description System.Single RotationLagSpeed How quickly the rotation lag moves. Declaration public float RotationLagSpeed Field Value Type Description System.Single Methods LateUpdate() Declaration protected void LateUpdate()"
  },
  "api/GameJamStarterKit.Collider2DExtnesions.html": {
    "href": "api/GameJamStarterKit.Collider2DExtnesions.html",
    "title": "Class Collider2DExtnesions | Game Jam Starter Kit Documentation",
    "keywords": "Class Collider2DExtnesions Useful Collider2D Extensions Inheritance System.Object Collider2DExtnesions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class Collider2DExtnesions Methods GetSize(Collider2D) returns the size of this collider. if the Collider2D has no size or radius, this returns the bounds of the collider. Declaration public static Vector2 GetSize(this Collider2D collider) Parameters Type Name Description Collider2D collider Returns Type Description Vector2 returns the size or bounds of this collider HasComponent<T>(Collider2D) Declaration public static bool HasComponent<T>(this Collider2D collider) Parameters Type Name Description Collider2D collider this Returns Type Description System.Boolean true if this has the component Type Parameters Name Description T Component type SetHeight(Collider2D, Single, Boolean) Sets the height of the Collider2D to the value given. CircleCollider2D will change the radius to the height given. If the Collider2D is a Polygon or an Edge collider, a warning will be logged unless disabled. Declaration public static void SetHeight(this Collider2D collider, float height, bool disableWarning = false) Parameters Type Name Description Collider2D collider System.Single height new height of the collider System.Boolean disableWarning disable warning message when called on Polygon or Edge colliders SetSize(Collider2D, Vector2, Boolean) Sets the size of a Collider2D to the Vector2 given. CircleCollider2D will change the radius to Max of size.x and size.y. If the Collider2D is a Polygon or an Edge collider, a warning will be logged unless disabled. Declaration public static void SetSize(this Collider2D collider, Vector2 size, bool disableWarning = false) Parameters Type Name Description Collider2D collider Vector2 size new size of the collider System.Boolean disableWarning disable warning message when called on Polygon or Edge colliders SetWidth(Collider2D, Single, Boolean) Sets the width of the Collider2D to the value given. CircleCollider2D will change the radius to the width given. If the Collider2D is a Polygon or an Edge collider, a warning will be logged unless disabled. Declaration public static void SetWidth(this Collider2D collider, float width, bool disableWarning = false) Parameters Type Name Description Collider2D collider System.Single width new width of the collider System.Boolean disableWarning disable warning message when called on Polygon or Edge colliders"
  },
  "api/GameJamStarterKit.ColliderExtensions.html": {
    "href": "api/GameJamStarterKit.ColliderExtensions.html",
    "title": "Class ColliderExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class ColliderExtensions Useful Collider extensions Inheritance System.Object ColliderExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class ColliderExtensions Methods HasComponent<T>(Collider) Declaration public static bool HasComponent<T>(this Collider collider) Parameters Type Name Description Collider collider this Returns Type Description System.Boolean true if this has the component Type Parameters Name Description T component type"
  },
  "api/GameJamStarterKit.ComparableExtensions.html": {
    "href": "api/GameJamStarterKit.ComparableExtensions.html",
    "title": "Class ComparableExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class ComparableExtensions Useful extensions for IComparable Inheritance System.Object ComparableExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class ComparableExtensions Methods IsBetweenExclusive<T>(T, T, T) Returns true if the value is between lower and upper, does not include values equal to lower or upper. Declaration public static bool IsBetweenExclusive<T>(this T value, T lower, T upper) where T : IComparable<T> Parameters Type Name Description T value this value T lower lower limit T upper upper limit Returns Type Description System.Boolean true if the value is between the lower and upper limit not including equal to the limit values Type Parameters Name Description T type of IComparable IsBetweenInclusive<T>(T, T, T) Returns true if the value is between lower and upper, including if the value is equal to lower or upper. Declaration public static bool IsBetweenInclusive<T>(this T value, T lower, T upper) where T : IComparable<T> Parameters Type Name Description T value this value T lower lower limit T upper upper limit Returns Type Description System.Boolean true if the value is between the lower and upper limit including equal to the limit values Type Parameters Name Description T type of IComparable"
  },
  "api/GameJamStarterKit.Components.CommonButtonActions.html": {
    "href": "api/GameJamStarterKit.Components.CommonButtonActions.html",
    "title": "Class CommonButtonActions | Game Jam Starter Kit Documentation",
    "keywords": "Class CommonButtonActions Component to attach to a UI providing access to some common button click actions Inheritance System.Object CommonButtonActions Namespace : GameJamStarterKit.Components Assembly : cs.temp.dll.dll Syntax public class CommonButtonActions : MonoBehaviour Methods DebugLog(String) Prints text with Debug.Log. Useful for testing events Declaration public virtual void DebugLog(string message) Parameters Type Name Description System.String message LoadScene(String) Loads a single scene. Declaration public virtual void LoadScene(string scene) Parameters Type Name Description System.String scene scene to load LoadSceneAdditive(String) Loads a scene additively Declaration public virtual void LoadSceneAdditive(string scene) Parameters Type Name Description System.String scene scene to load OpenURL(String) Opens a URL using Application.OpenURL Declaration public virtual void OpenURL(string url) Parameters Type Name Description System.String url url to open QuitApplication() Calls Application.Quit() Declaration public virtual void QuitApplication() UnloadScene(String) Unloads a scene Declaration public virtual void UnloadScene(string scene) Parameters Type Name Description System.String scene scene to unload."
  },
  "api/GameJamStarterKit.Components.ConstantRotation.html": {
    "href": "api/GameJamStarterKit.Components.ConstantRotation.html",
    "title": "Class ConstantRotation | Game Jam Starter Kit Documentation",
    "keywords": "Class ConstantRotation Rotates an object at a constant rate. UseRandomRange will roll a random rotation value on Start. Inheritance System.Object ConstantRotation Namespace : GameJamStarterKit.Components Assembly : cs.temp.dll.dll Syntax public class ConstantRotation : MonoBehaviour Fields Rotation The constant rotation applied to this GameObject Declaration public Vector3 Rotation Field Value Type Description Vector3 RotationRangeMax The maximum constant rotation applied to this GameObject when using UseRandomRange Declaration public Vector3 RotationRangeMax Field Value Type Description Vector3 RotationRangeMin The minimum constant rotation applied to this GameObject when using UseRandomRange Declaration public Vector3 RotationRangeMin Field Value Type Description Vector3 UseRandomRange Tells this component to use RotationRangeMin and RotationRangeMax Declaration public bool UseRandomRange Field Value Type Description System.Boolean Methods RandomizeConstantRotation() Randomizes the constant rotation of this component. UseRandomRange must be true for this to have any effect Declaration public void RandomizeConstantRotation()"
  },
  "api/GameJamStarterKit.Components.html": {
    "href": "api/GameJamStarterKit.Components.html",
    "title": "Namespace GameJamStarterKit.Components | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Components Classes CommonButtonActions Component to attach to a UI providing access to some common button click actions ConstantRotation Rotates an object at a constant rate. UseRandomRange will roll a random rotation value on Start. LookAtTarget Forces this GameObject to look at a target transform. MoveAlongDistance Moves a GameObject along an axis for a given distance at a given speed. RandomizeTransform Randomizes a GameObjects transform component on start."
  },
  "api/GameJamStarterKit.Components.LookAtTarget.html": {
    "href": "api/GameJamStarterKit.Components.LookAtTarget.html",
    "title": "Class LookAtTarget | Game Jam Starter Kit Documentation",
    "keywords": "Class LookAtTarget Forces this GameObject to look at a target transform. Inheritance System.Object LookAtTarget Namespace : GameJamStarterKit.Components Assembly : cs.temp.dll.dll Syntax public class LookAtTarget : MonoBehaviour Fields Target Transform to look at Declaration public Transform Target Field Value Type Description Transform"
  },
  "api/GameJamStarterKit.Components.MoveAlongDistance.html": {
    "href": "api/GameJamStarterKit.Components.MoveAlongDistance.html",
    "title": "Class MoveAlongDistance | Game Jam Starter Kit Documentation",
    "keywords": "Class MoveAlongDistance Moves a GameObject along an axis for a given distance at a given speed. Inheritance System.Object MoveAlongDistance Namespace : GameJamStarterKit.Components Assembly : cs.temp.dll.dll Syntax public class MoveAlongDistance : MonoBehaviour Fields Distance Distance from the current position to travel Declaration public float Distance Field Value Type Description System.Single KitAxis Axis to move along Declaration public KitAxis KitAxis Field Value Type Description KitAxis OnlyLeft Move only left along the axis? Declaration public bool OnlyLeft Field Value Type Description System.Boolean OnlyRight Move only right along the axis? Declaration public bool OnlyRight Field Value Type Description System.Boolean Speed Speed to travel at Declaration public float Speed Field Value Type Description System.Single"
  },
  "api/GameJamStarterKit.Components.RandomizeTransform.html": {
    "href": "api/GameJamStarterKit.Components.RandomizeTransform.html",
    "title": "Class RandomizeTransform | Game Jam Starter Kit Documentation",
    "keywords": "Class RandomizeTransform Randomizes a GameObjects transform component on start. Inheritance System.Object RandomizeTransform Namespace : GameJamStarterKit.Components Assembly : cs.temp.dll.dll Syntax public class RandomizeTransform : MonoBehaviour Fields Position Should the position be randomized? Declaration public bool Position Field Value Type Description System.Boolean PositionMaxOffset Maximum offset for the position Declaration public Vector3 PositionMaxOffset Field Value Type Description Vector3 PositionMinOffset Minimum offset for the position Declaration public Vector3 PositionMinOffset Field Value Type Description Vector3 Rotation Should the rotation be randomized? Declaration public bool Rotation Field Value Type Description System.Boolean RotationMaxOffset Maximum rotation offset Declaration public Vector3 RotationMaxOffset Field Value Type Description Vector3 RotationMinOffset Minimum rotation offset Declaration public Vector3 RotationMinOffset Field Value Type Description Vector3 Scale Should the scale be randomized? Declaration public bool Scale Field Value Type Description System.Boolean ScaleMaxOffset Maximum scale offset Declaration public Vector3 ScaleMaxOffset Field Value Type Description Vector3 ScaleMinOffset Minimum scale offset Declaration public Vector3 ScaleMinOffset Field Value Type Description Vector3"
  },
  "api/GameJamStarterKit.Currency.BuyableComponent.html": {
    "href": "api/GameJamStarterKit.Currency.BuyableComponent.html",
    "title": "Class BuyableComponent | Game Jam Starter Kit Documentation",
    "keywords": "Class BuyableComponent A Generic implementation of IBuyable. Inheritance System.Object BuyableComponent Implements IBuyable Namespace : GameJamStarterKit.Currency Assembly : cs.temp.dll.dll Syntax public class BuyableComponent : MonoBehaviour, IBuyable Fields Cost The cost of this Buyable Declaration public Currency Cost Field Value Type Description Currency OnPurchased Called when this buyable is purchased. Passes the GameObject this is attached to. Declaration public CurrencyObjectUnityEvent OnPurchased Field Value Type Description CurrencyObjectUnityEvent Methods CanBuy(Currency) Declaration public bool CanBuy(Currency currency) Parameters Type Name Description Currency currency Returns Type Description System.Boolean CanBuy(Wallet) Declaration public bool CanBuy(Wallet wallet) Parameters Type Name Description Wallet wallet Returns Type Description System.Boolean GetCost() Declaration public Currency GetCost() Returns Type Description Currency TryBuy(Currency, out Object) Declaration public bool TryBuy(Currency currency, out Object boughtObject) Parameters Type Name Description Currency currency Object boughtObject The object purchased. Null if unable to buy Returns Type Description System.Boolean TryBuy(Wallet, out Object) Declaration public bool TryBuy(Wallet wallet, out Object boughtObject) Parameters Type Name Description Wallet wallet Object boughtObject The object purchased. Null if unable to buy Returns Type Description System.Boolean Implements IBuyable"
  },
  "api/GameJamStarterKit.Currency.Currency.html": {
    "href": "api/GameJamStarterKit.Currency.Currency.html",
    "title": "Struct Currency | Game Jam Starter Kit Documentation",
    "keywords": "Struct Currency Serializable struct that represents a currency. Namespace : GameJamStarterKit.Currency Assembly : cs.temp.dll.dll Syntax public struct Currency Constructors Currency(String, Double) Creates a new currency with the given name and amount Declaration public Currency(string name, double amount = 0) Parameters Type Name Description System.String name currency name System.Double amount currency amount Properties GetAmount Gets the current amount of currency Declaration public double GetAmount { get; } Property Value Type Description System.Double GetName Gets the name of the currency Declaration public string GetName { get; } Property Value Type Description System.String Methods Add(Currency, Double) Add another currency to this currency. Ensures the other currency has the same name and has enough. Declaration public void Add(Currency currency, double amount) Parameters Type Name Description Currency currency currency to add System.Double amount amount to subtract Add(Double) Adds the amount given to this currency Declaration public void Add(double amount) Parameters Type Name Description System.Double amount the amount to add AreSameName(Currency) Compare the names of this currency and another Declaration public bool AreSameName(Currency currency) Parameters Type Name Description Currency currency currency to compare to Returns Type Description System.Boolean returns true if this and the other currency have the same name CanSubtract(Double) Check if this currency has enough to subtract the amount Declaration public bool CanSubtract(double amount) Parameters Type Name Description System.Double amount amount to subtract Returns Type Description System.Boolean returns true if this currency has enough Equals(Currency) Compare two currency objects Declaration public bool Equals(Currency currency) Parameters Type Name Description Currency currency the currency to compare with Returns Type Description System.Boolean Returns true if the name and currency amount is equal to another currency object Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Set(Double) Sets the amount for this currency. Declaration public void Set(double amount) Parameters Type Name Description System.Double amount amount of currency Subtract(Double) Subtracts the amount given from this currency Declaration public void Subtract(double amount) Parameters Type Name Description System.Double amount amount to subtract ToString() Represents this currency object as Name xAmount. Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Examples USD x1000.50"
  },
  "api/GameJamStarterKit.Currency.CurrencyDoubleUnityEvent.html": {
    "href": "api/GameJamStarterKit.Currency.CurrencyDoubleUnityEvent.html",
    "title": "Class CurrencyDoubleUnityEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class CurrencyDoubleUnityEvent Inheritance System.Object CurrencyDoubleUnityEvent Namespace : GameJamStarterKit.Currency Assembly : cs.temp.dll.dll Syntax public class CurrencyDoubleUnityEvent : UnityEvent<Currency, double>"
  },
  "api/GameJamStarterKit.Currency.CurrencyObjectUnityEvent.html": {
    "href": "api/GameJamStarterKit.Currency.CurrencyObjectUnityEvent.html",
    "title": "Class CurrencyObjectUnityEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class CurrencyObjectUnityEvent Inheritance System.Object CurrencyObjectUnityEvent Namespace : GameJamStarterKit.Currency Assembly : cs.temp.dll.dll Syntax public class CurrencyObjectUnityEvent : UnityEvent<Currency, Object>"
  },
  "api/GameJamStarterKit.Currency.html": {
    "href": "api/GameJamStarterKit.Currency.html",
    "title": "Namespace GameJamStarterKit.Currency | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Currency Classes BuyableComponent A Generic implementation of IBuyable. CurrencyDoubleUnityEvent CurrencyObjectUnityEvent SellableComponent A Generic implementation of ISellable. Wallet A Component representing a game objects wallet of currencies. Structs Currency Serializable struct that represents a currency. Interfaces IBuyable Interface for creating a buyable class ISellable interface for creating a sellable class"
  },
  "api/GameJamStarterKit.Currency.IBuyable.html": {
    "href": "api/GameJamStarterKit.Currency.IBuyable.html",
    "title": "Interface IBuyable | Game Jam Starter Kit Documentation",
    "keywords": "Interface IBuyable Interface for creating a buyable class Namespace : GameJamStarterKit.Currency Assembly : cs.temp.dll.dll Syntax public interface IBuyable Methods CanBuy(Currency) Check if the currency can afford to purchase this Buyable Declaration bool CanBuy(Currency currency) Parameters Type Name Description Currency currency currency to check Returns Type Description System.Boolean returns true if the currency has enough and is the same name as the cost currency CanBuy(Wallet) Check if the wallet can afford to purchase this Buyable Declaration bool CanBuy(Wallet wallet) Parameters Type Name Description Wallet wallet the wallet to check Returns Type Description System.Boolean returns true if the wallet has enough of the cost currency GetCost() Gets the cost of this Buyable Declaration Currency GetCost() Returns Type Description Currency returns a currency for the cost of this Buyable TryBuy(Currency, out Object) Purchases the item if possible using the given currency Declaration bool TryBuy(Currency currency, out Object boughtObject) Parameters Type Name Description Currency currency the currency to purchase with Object boughtObject the object bought Returns Type Description System.Boolean returns if this buyable was purchased or not. TryBuy(Wallet, out Object) Purchases the item if possible using the given wallet Declaration bool TryBuy(Wallet wallet, out Object boughtObject) Parameters Type Name Description Wallet wallet the wallet to purchase with Object boughtObject the object bought Returns Type Description System.Boolean returns if this buyable was purchased or not."
  },
  "api/GameJamStarterKit.Currency.ISellable.html": {
    "href": "api/GameJamStarterKit.Currency.ISellable.html",
    "title": "Interface ISellable | Game Jam Starter Kit Documentation",
    "keywords": "Interface ISellable interface for creating a sellable class Namespace : GameJamStarterKit.Currency Assembly : cs.temp.dll.dll Syntax public interface ISellable Methods CanSell() Check if this can be sold Declaration bool CanSell() Returns Type Description System.Boolean returns true if this can be sold Sell() Sells this Declaration Currency Sell() Returns Type Description Currency returns the currency this is sold for"
  },
  "api/GameJamStarterKit.Currency.SellableComponent.html": {
    "href": "api/GameJamStarterKit.Currency.SellableComponent.html",
    "title": "Class SellableComponent | Game Jam Starter Kit Documentation",
    "keywords": "Class SellableComponent A Generic implementation of ISellable. Inheritance System.Object SellableComponent Implements ISellable Namespace : GameJamStarterKit.Currency Assembly : cs.temp.dll.dll Syntax public class SellableComponent : MonoBehaviour, ISellable Fields CanBeSold If this GameObject can currently be sold or not. Declaration public bool CanBeSold Field Value Type Description System.Boolean OnSold Invoked when this is sold Declaration public CurrencyObjectUnityEvent OnSold Field Value Type Description CurrencyObjectUnityEvent SellValue The Currency to sell this for Declaration public Currency SellValue Field Value Type Description Currency Methods CanSell() returns CanBeSold Declaration public bool CanSell() Returns Type Description System.Boolean Sell() Calls OnSold then destroys the game object this is attached to. Declaration public Currency Sell() Returns Type Description Currency Implements ISellable"
  },
  "api/GameJamStarterKit.Currency.Wallet.html": {
    "href": "api/GameJamStarterKit.Currency.Wallet.html",
    "title": "Class Wallet | Game Jam Starter Kit Documentation",
    "keywords": "Class Wallet A Component representing a game objects wallet of currencies. Inheritance System.Object Wallet Namespace : GameJamStarterKit.Currency Assembly : cs.temp.dll.dll Syntax public class Wallet : MonoBehaviour Fields OnAdd Invoked when a currency is added to. Passes the currency and the amount added Declaration public CurrencyDoubleUnityEvent OnAdd Field Value Type Description CurrencyDoubleUnityEvent OnRemoved Invoked when a currency is removed from this wallet. Passes the currency and its amount when removed. Declaration public CurrencyDoubleUnityEvent OnRemoved Field Value Type Description CurrencyDoubleUnityEvent OnSubtract Invoked when a currency is subtracted from. Passes the currency and the amount subtracted Declaration public CurrencyDoubleUnityEvent OnSubtract Field Value Type Description CurrencyDoubleUnityEvent Methods Add(Currency) Adds the amount of currency to this wallet Declaration public void Add(Currency currency) Parameters Type Name Description Currency currency the currency to add Add(String, Double) Adds the amount of currency to this wallet. Declaration public void Add(string currencyName, double amount) Parameters Type Name Description System.String currencyName currency name to add System.Double amount amount to add CanSubtract(Currency) Check if this wallet can subtract the currency Declaration public bool CanSubtract(Currency currency) Parameters Type Name Description Currency currency the currency to subtract Returns Type Description System.Boolean returns true if this wallet has the currency and enough amount CanSubtract(String, Double) Check if this wallet can subtract the amount of currency Declaration public bool CanSubtract(string currencyName, double amount) Parameters Type Name Description System.String currencyName currency name to subtract System.Double amount amount to subtract Returns Type Description System.Boolean returns true if this wallet has the currency and enough amount GetContents() Get the Currency stored in this wallet Declaration public IEnumerable<Currency> GetContents() Returns Type Description IEnumerable < Currency > returns an enumerable of the Currency in this wallet HasCurrency(String) Check if this wallet has a currency by name Declaration public bool HasCurrency(string currencyName) Parameters Type Name Description System.String currencyName currency name Returns Type Description System.Boolean returns true if the wallet has the currency Remove(String) Removes a currency from this wallet entirely. Returns the amount removed Declaration public double Remove(string currencyName) Parameters Type Name Description System.String currencyName currency to remove Returns Type Description System.Double returns the amount of currency removed. Returns 0 if the wallet didn't have the currency Set(Currency) Sets the amount of currency for this wallet Declaration public void Set(Currency currency) Parameters Type Name Description Currency currency the currency to set Set(String, Double) Sets the amount of currency for this wallet Declaration public void Set(string currencyName, double amount) Parameters Type Name Description System.String currencyName currency name to set System.Double amount currency amount Subtract(Currency) Subtracts the amount of currency from this wallet Declaration public void Subtract(Currency currency) Parameters Type Name Description Currency currency the currency to subtract Subtract(String, Double) Subtracts the amount of currency from this wallet Declaration public void Subtract(string currencyName, double amount) Parameters Type Name Description System.String currencyName currency name to subtract System.Double amount amount to subtract"
  },
  "api/GameJamStarterKit.Demo.CharacterInput.html": {
    "href": "api/GameJamStarterKit.Demo.CharacterInput.html",
    "title": "Class CharacterInput | Game Jam Starter Kit Documentation",
    "keywords": "Class CharacterInput Inheritance System.Object CharacterInput Namespace : GameJamStarterKit.Demo Assembly : cs.temp.dll.dll Syntax public class CharacterInput : MonoBehaviour Fields MoveSpeed Declaration public float MoveSpeed Field Value Type Description System.Single TurnSpeed Declaration public float TurnSpeed Field Value Type Description System.Single"
  },
  "api/GameJamStarterKit.Demo.html": {
    "href": "api/GameJamStarterKit.Demo.html",
    "title": "Namespace GameJamStarterKit.Demo | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Demo Classes CharacterInput ReloadSceneButtonDemo"
  },
  "api/GameJamStarterKit.Demo.ReloadSceneButtonDemo.html": {
    "href": "api/GameJamStarterKit.Demo.ReloadSceneButtonDemo.html",
    "title": "Class ReloadSceneButtonDemo | Game Jam Starter Kit Documentation",
    "keywords": "Class ReloadSceneButtonDemo Inheritance System.Object ReloadSceneButtonDemo Namespace : GameJamStarterKit.Demo Assembly : cs.temp.dll.dll Syntax public class ReloadSceneButtonDemo : MonoBehaviour"
  },
  "api/GameJamStarterKit.Editor.html": {
    "href": "api/GameJamStarterKit.Editor.html",
    "title": "Namespace GameJamStarterKit.Editor | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Editor Classes KitButtonEditor KitEditorExtensions KitGUILayout Useful EditorGUILayout wrappers to provide nicer looking ui elements in the editor. KitOnlyPrefabAssetPropertyDrawer SerializedPropertyExtensions Useful extensions for SerializedProperties"
  },
  "api/GameJamStarterKit.Editor.KitButtonEditor.html": {
    "href": "api/GameJamStarterKit.Editor.KitButtonEditor.html",
    "title": "Class KitButtonEditor | Game Jam Starter Kit Documentation",
    "keywords": "Class KitButtonEditor Inheritance System.Object KitButtonEditor Namespace : GameJamStarterKit.Editor Assembly : cs.temp.dll.dll Syntax public class KitButtonEditor : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/GameJamStarterKit.Editor.KitEditorExtensions.html": {
    "href": "api/GameJamStarterKit.Editor.KitEditorExtensions.html",
    "title": "Class KitEditorExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class KitEditorExtensions Inheritance System.Object KitEditorExtensions Namespace : GameJamStarterKit.Editor Assembly : cs.temp.dll.dll Syntax public static class KitEditorExtensions Methods DrawKitButtons(UnityEditor.Editor) Declaration public static void DrawKitButtons(this UnityEditor.Editor editor) Parameters Type Name Description UnityEditor.Editor editor"
  },
  "api/GameJamStarterKit.Editor.KitGUILayout.html": {
    "href": "api/GameJamStarterKit.Editor.KitGUILayout.html",
    "title": "Class KitGUILayout | Game Jam Starter Kit Documentation",
    "keywords": "Class KitGUILayout Useful EditorGUILayout wrappers to provide nicer looking ui elements in the editor. Inheritance System.Object KitGUILayout Namespace : GameJamStarterKit.Editor Assembly : cs.temp.dll.dll Syntax public static class KitGUILayout Fields DROPDOWN_ICON Declaration public static readonly Texture2D DROPDOWN_ICON Field Value Type Description Texture2D EXPAND_ICON Declaration public static readonly Texture2D EXPAND_ICON Field Value Type Description Texture2D Methods BeginCleanFoldout(String, ref Boolean, Boolean, Int32) Starts a new foldout section using BeginVertical Declaration public static void BeginCleanFoldout(string text, ref bool show, bool bold = true, int size = 18) Parameters Type Name Description System.String text text to display for the foldout System.Boolean show should the foldout be enabled or disabled System.Boolean bold should the label text be bold System.Int32 size font size BeginResponsive(Int32, GUILayoutOption[]) Starts a Responsive ui layout, switching between BeginHorizontal and BeginVertical depending on minWidth Declaration public static void BeginResponsive(int minWidth, params GUILayoutOption[] options) Parameters Type Name Description System.Int32 minWidth switches to vertical layout below this value GUILayoutOption [] options BeginResponsive(Int32, GUIStyle, GUILayoutOption[]) Starts a Responsive ui layout, switching between BeginHorizontal and BeginVertical depending on minWidth Declaration public static void BeginResponsive(int minWidth, GUIStyle style, params GUILayoutOption[] options) Parameters Type Name Description System.Int32 minWidth switches to vertical layout below this value GUIStyle style GUILayoutOption [] options BeginResponsiveCleanFoldout(String, Int32, ref Boolean, Boolean, Int32) Starts a new responsive foldout section. Declaration public static void BeginResponsiveCleanFoldout(string text, int responsiveMinWidth, ref bool show, bool bold = true, int size = 18) Parameters Type Name Description System.String text text to display for the foldout System.Int32 responsiveMinWidth width to switch to vertical from horizontal System.Boolean show should the foldout be enabled or disabled System.Boolean bold should the label text be bold System.Int32 size font size EndCleanFoldout() Ends a vertical foldout Declaration public static void EndCleanFoldout() EndResponsive(Int32) Ends a responsive ui layout, switching between EndHorizontal and EndVertical depending on minWidth; Declaration public static void EndResponsive(int minWidth) Parameters Type Name Description System.Int32 minWidth switches to vertical layout below this value EndResponsiveCleanFoldout(Int32) Ends a responsive clean foldout Declaration public static void EndResponsiveCleanFoldout(int responsiveMinWidth) Parameters Type Name Description System.Int32 responsiveMinWidth width (should be same as the begin responsive foldout value) LabelButton(GUIContent, Boolean, Int32) A plain text button. Declaration public static bool LabelButton(GUIContent content, bool bold = false, int size = 18) Parameters Type Name Description GUIContent content content of the button System.Boolean bold if the text should be bold or not System.Int32 size font size Returns Type Description System.Boolean returns if the button was clicked this frame"
  },
  "api/GameJamStarterKit.Editor.KitOnlyPrefabAssetPropertyDrawer.html": {
    "href": "api/GameJamStarterKit.Editor.KitOnlyPrefabAssetPropertyDrawer.html",
    "title": "Class KitOnlyPrefabAssetPropertyDrawer | Game Jam Starter Kit Documentation",
    "keywords": "Class KitOnlyPrefabAssetPropertyDrawer Inheritance System.Object KitOnlyPrefabAssetPropertyDrawer Namespace : GameJamStarterKit.Editor Assembly : cs.temp.dll.dll Syntax public class KitOnlyPrefabAssetPropertyDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/GameJamStarterKit.Editor.SerializedPropertyExtensions.html": {
    "href": "api/GameJamStarterKit.Editor.SerializedPropertyExtensions.html",
    "title": "Class SerializedPropertyExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class SerializedPropertyExtensions Useful extensions for SerializedProperties Inheritance System.Object SerializedPropertyExtensions Namespace : GameJamStarterKit.Editor Assembly : cs.temp.dll.dll Syntax public static class SerializedPropertyExtensions Methods Draw(SerializedProperty, Rect, Boolean) Calls EditorGUI.PropertyField for this property. Declaration public static void Draw(this SerializedProperty property, Rect position, bool includeChildren = false) Parameters Type Name Description SerializedProperty property Rect position rect position of the property System.Boolean includeChildren include propertyfield children DrawLayout(SerializedProperty, Boolean) Calls EditorGUILayout.PropertyField for this property. Declaration public static void DrawLayout(this SerializedProperty property, bool includeChildren = false) Parameters Type Name Description SerializedProperty property System.Boolean includeChildren include propertyfield children EnumValue<T>(SerializedProperty) returns the enum value of this property Declaration public static T EnumValue<T>(this SerializedProperty property) where T : struct, Enum Parameters Type Name Description SerializedProperty property Returns Type Description T Type Parameters Name Description T expected return type"
  },
  "api/GameJamStarterKit.Events.html": {
    "href": "api/GameJamStarterKit.Events.html",
    "title": "Namespace GameJamStarterKit.Events | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Events Classes UnityBoolEvent UnityEvent with a bool parameter UnityFloatEvent UnityEvent with a float parameter UnityGameObjectEvent UnityEvent with a GameObject parameter UnityIntEvent UnityEvent with a int parameter UnityObjectEvent UnityEvent with a UnityEngine.Object parameter UnityStringEvent UnityEvent with a string parameter UnityTransformEvent UnityEvent with a transform parameter UnityVector2Event UnityEvent with a Vector2 parameter UnityVector3Event UnityEvent with a Vector3 parameter"
  },
  "api/GameJamStarterKit.Events.UnityBoolEvent.html": {
    "href": "api/GameJamStarterKit.Events.UnityBoolEvent.html",
    "title": "Class UnityBoolEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class UnityBoolEvent UnityEvent with a bool parameter Inheritance System.Object UnityBoolEvent Namespace : GameJamStarterKit.Events Assembly : cs.temp.dll.dll Syntax public class UnityBoolEvent : UnityEvent<bool>"
  },
  "api/GameJamStarterKit.Events.UnityFloatEvent.html": {
    "href": "api/GameJamStarterKit.Events.UnityFloatEvent.html",
    "title": "Class UnityFloatEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class UnityFloatEvent UnityEvent with a float parameter Inheritance System.Object UnityFloatEvent Namespace : GameJamStarterKit.Events Assembly : cs.temp.dll.dll Syntax public class UnityFloatEvent : UnityEvent<float>"
  },
  "api/GameJamStarterKit.Events.UnityGameObjectEvent.html": {
    "href": "api/GameJamStarterKit.Events.UnityGameObjectEvent.html",
    "title": "Class UnityGameObjectEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class UnityGameObjectEvent UnityEvent with a GameObject parameter Inheritance System.Object UnityGameObjectEvent Namespace : GameJamStarterKit.Events Assembly : cs.temp.dll.dll Syntax public class UnityGameObjectEvent : UnityEvent<GameObject>"
  },
  "api/GameJamStarterKit.Events.UnityIntEvent.html": {
    "href": "api/GameJamStarterKit.Events.UnityIntEvent.html",
    "title": "Class UnityIntEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class UnityIntEvent UnityEvent with a int parameter Inheritance System.Object UnityIntEvent Namespace : GameJamStarterKit.Events Assembly : cs.temp.dll.dll Syntax public class UnityIntEvent : UnityEvent<int>"
  },
  "api/GameJamStarterKit.Events.UnityObjectEvent.html": {
    "href": "api/GameJamStarterKit.Events.UnityObjectEvent.html",
    "title": "Class UnityObjectEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class UnityObjectEvent UnityEvent with a UnityEngine.Object parameter Inheritance System.Object UnityObjectEvent Namespace : GameJamStarterKit.Events Assembly : cs.temp.dll.dll Syntax public class UnityObjectEvent : UnityEvent<Object>"
  },
  "api/GameJamStarterKit.Events.UnityStringEvent.html": {
    "href": "api/GameJamStarterKit.Events.UnityStringEvent.html",
    "title": "Class UnityStringEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class UnityStringEvent UnityEvent with a string parameter Inheritance System.Object UnityStringEvent Namespace : GameJamStarterKit.Events Assembly : cs.temp.dll.dll Syntax public class UnityStringEvent : UnityEvent<string>"
  },
  "api/GameJamStarterKit.Events.UnityTransformEvent.html": {
    "href": "api/GameJamStarterKit.Events.UnityTransformEvent.html",
    "title": "Class UnityTransformEvent | Game Jam Starter Kit Documentation",
    "keywords": "Class UnityTransformEvent UnityEvent with a transform parameter Inheritance System.Object UnityTransformEvent Namespace : GameJamStarterKit.Events Assembly : cs.temp.dll.dll Syntax public class UnityTransformEvent : UnityEvent<UnityEngine.Transform>"
  },
  "api/GameJamStarterKit.Events.UnityVector2Event.html": {
    "href": "api/GameJamStarterKit.Events.UnityVector2Event.html",
    "title": "Class UnityVector2Event | Game Jam Starter Kit Documentation",
    "keywords": "Class UnityVector2Event UnityEvent with a Vector2 parameter Inheritance System.Object UnityVector2Event Namespace : GameJamStarterKit.Events Assembly : cs.temp.dll.dll Syntax public class UnityVector2Event : UnityEvent<Vector2>"
  },
  "api/GameJamStarterKit.Events.UnityVector3Event.html": {
    "href": "api/GameJamStarterKit.Events.UnityVector3Event.html",
    "title": "Class UnityVector3Event | Game Jam Starter Kit Documentation",
    "keywords": "Class UnityVector3Event UnityEvent with a Vector3 parameter Inheritance System.Object UnityVector3Event Namespace : GameJamStarterKit.Events Assembly : cs.temp.dll.dll Syntax public class UnityVector3Event : UnityEvent<Vector3>"
  },
  "api/GameJamStarterKit.FXSystem.DespawnType.html": {
    "href": "api/GameJamStarterKit.FXSystem.DespawnType.html",
    "title": "Enum DespawnType | Game Jam Starter Kit Documentation",
    "keywords": "Enum DespawnType Method of despawning an FX Unit Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public enum DespawnType Fields Name Description Manual Timeout TimeoutRange"
  },
  "api/GameJamStarterKit.FXSystem.Editor.AnimationParameterPropertyDrawer.html": {
    "href": "api/GameJamStarterKit.FXSystem.Editor.AnimationParameterPropertyDrawer.html",
    "title": "Class AnimationParameterPropertyDrawer | Game Jam Starter Kit Documentation",
    "keywords": "Class AnimationParameterPropertyDrawer Inheritance System.Object AnimationParameterPropertyDrawer Namespace : GameJamStarterKit.FXSystem.Editor Assembly : cs.temp.dll.dll Syntax public class AnimationParameterPropertyDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description System.Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/GameJamStarterKit.FXSystem.Editor.FXSpawnerEditor.html": {
    "href": "api/GameJamStarterKit.FXSystem.Editor.FXSpawnerEditor.html",
    "title": "Class FXSpawnerEditor | Game Jam Starter Kit Documentation",
    "keywords": "Class FXSpawnerEditor Inheritance System.Object FXSpawnerEditor Namespace : GameJamStarterKit.FXSystem.Editor Assembly : cs.temp.dll.dll Syntax public class FXSpawnerEditor : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/GameJamStarterKit.FXSystem.Editor.FXUnitEditor.html": {
    "href": "api/GameJamStarterKit.FXSystem.Editor.FXUnitEditor.html",
    "title": "Class FXUnitEditor | Game Jam Starter Kit Documentation",
    "keywords": "Class FXUnitEditor Inheritance System.Object FXUnitEditor Namespace : GameJamStarterKit.FXSystem.Editor Assembly : cs.temp.dll.dll Syntax public class FXUnitEditor : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/GameJamStarterKit.FXSystem.Editor.html": {
    "href": "api/GameJamStarterKit.FXSystem.Editor.html",
    "title": "Namespace GameJamStarterKit.FXSystem.Editor | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.FXSystem.Editor Classes AnimationParameterPropertyDrawer FXSpawnerEditor FXUnitEditor RandomizeAnimatorParametersEditor RandomizeParameterDataPropertyDrawer"
  },
  "api/GameJamStarterKit.FXSystem.Editor.RandomizeAnimatorParametersEditor.html": {
    "href": "api/GameJamStarterKit.FXSystem.Editor.RandomizeAnimatorParametersEditor.html",
    "title": "Class RandomizeAnimatorParametersEditor | Game Jam Starter Kit Documentation",
    "keywords": "Class RandomizeAnimatorParametersEditor Inheritance System.Object RandomizeAnimatorParametersEditor Namespace : GameJamStarterKit.FXSystem.Editor Assembly : cs.temp.dll.dll Syntax public class RandomizeAnimatorParametersEditor : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/GameJamStarterKit.FXSystem.Editor.RandomizeParameterDataPropertyDrawer.html": {
    "href": "api/GameJamStarterKit.FXSystem.Editor.RandomizeParameterDataPropertyDrawer.html",
    "title": "Class RandomizeParameterDataPropertyDrawer | Game Jam Starter Kit Documentation",
    "keywords": "Class RandomizeParameterDataPropertyDrawer Inheritance System.Object RandomizeParameterDataPropertyDrawer Namespace : GameJamStarterKit.FXSystem.Editor Assembly : cs.temp.dll.dll Syntax public class RandomizeParameterDataPropertyDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description System.Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/GameJamStarterKit.FXSystem.FXSpawner.html": {
    "href": "api/GameJamStarterKit.FXSystem.FXSpawner.html",
    "title": "Class FXSpawner | Game Jam Starter Kit Documentation",
    "keywords": "Class FXSpawner Spawns FX Units Inheritance System.Object FXSpawner Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public class FXSpawner : MonoBehaviour Fields Units Declaration public List<FXSpawnerItem> Units Field Value Type Description List < FXSpawnerItem > Methods Animation_SpawnAndForget(String) Spawns the FXUnit for the given key. Does not retain the key, and will not check if it's retained already. waits a single frame before spawning the FXUnit Declaration public IEnumerator<FXUnit> Animation_SpawnAndForget(string key) Parameters Type Name Description System.String key Returns Type Description IEnumerator < FXUnit > Animation_SpawnAndRetain(String) Spawns the FXUnit for the given key. Retains the key. Returns the retained key if already retained. waits a single frame before spawning the FXUnit. Declaration public IEnumerator Animation_SpawnAndRetain(string key) Parameters Type Name Description System.String key Returns Type Description IEnumerator DespawnAndRelease(String) Calls despawn on the FXUnit retained with the key and releases the retainer on the key. does nothing if the key is not retained. Declaration public void DespawnAndRelease(string key) Parameters Type Name Description System.String key Key to check for GetRetainedUnit(String) Gets the retained FXUnit for the given key. returns null if the key isn't retained. Declaration public FXUnit GetRetainedUnit(string key) Parameters Type Name Description System.String key Key to check Returns Type Description FXUnit IsRetained(String) returns if a key is actively retained or not. Declaration public bool IsRetained(string key) Parameters Type Name Description System.String key Key to check Returns Type Description System.Boolean Release(String) Releases the retainer on the key given. Declaration public void Release(string key) Parameters Type Name Description System.String key key to release Retain(String, FXUnit) Retains the given unit if not already retained. Declaration public void Retain(string key, FXUnit unit) Parameters Type Name Description System.String key key to retain FXUnit unit unit associated with the key SpawnAndForget(String) Spawns the FXUnit for the given key. Does not retain the key, and will not check if it's retained already. Declaration public FXUnit SpawnAndForget(string key) Parameters Type Name Description System.String key key to spawn Returns Type Description FXUnit SpawnAndRetain(String) Spawns the FXUnit for the given key. Retains the key. Returns the retained key if already retained. Declaration public FXUnit SpawnAndRetain(string key) Parameters Type Name Description System.String key key to spawn and retain Returns Type Description FXUnit"
  },
  "api/GameJamStarterKit.FXSystem.FXSpawnerItem.html": {
    "href": "api/GameJamStarterKit.FXSystem.FXSpawnerItem.html",
    "title": "Class FXSpawnerItem | Game Jam Starter Kit Documentation",
    "keywords": "Class FXSpawnerItem An Item entry for an FX Spawner Inheritance System.Object FXSpawnerItem Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public class FXSpawnerItem Fields Key Key of the FX Unit Declaration public string Key Field Value Type Description System.String Parent The transform to attach this FX Unit to Declaration public Transform Parent Field Value Type Description Transform Unit The FX Unit Declaration public FXUnit Unit Field Value Type Description FXUnit"
  },
  "api/GameJamStarterKit.FXSystem.FXUnit.html": {
    "href": "api/GameJamStarterKit.FXSystem.FXUnit.html",
    "title": "Class FXUnit | Game Jam Starter Kit Documentation",
    "keywords": "Class FXUnit Represents an FX GameObject for use with an FX Spawner. Inheritance System.Object FXUnit Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public class FXUnit : MonoBehaviour Fields DespawnTimeout If using a timeout, how long until this FX Unit despawns in seconds Declaration public float DespawnTimeout Field Value Type Description System.Single DespawnTimeoutMaximum if using a timeout range, maximum time it takes until this FX Unit despawns in seconds. Declaration public float DespawnTimeoutMaximum Field Value Type Description System.Single DespawnTimeoutMinimum if using a timeout range, minimum time it takes until this FX Unit despawns in seconds. Declaration public float DespawnTimeoutMinimum Field Value Type Description System.Single DespawnType How this FX Unit leaves the world Declaration public DespawnType DespawnType Field Value Type Description DespawnType OnDestroyed Declaration public UnityEvent OnDestroyed Field Value Type Description UnityEvent SpawnScale How to scale this fx unit when spawning it Declaration public SpawnScale SpawnScale Field Value Type Description SpawnScale SpawnType How this FX unit spawns in the world Declaration public SpawnType SpawnType Field Value Type Description SpawnType Methods Animation_Despawn() Despawns this FX unit immediately Declaration public virtual void Animation_Despawn() Despawn() Despawns this FX Unit immediately Declaration public virtual void Despawn() Detach() Detaches this FXUnit from its parent, keeping it's world position. Declaration public void Detach() Start() Declaration protected virtual void Start() Update() Declaration protected virtual void Update()"
  },
  "api/GameJamStarterKit.FXSystem.html": {
    "href": "api/GameJamStarterKit.FXSystem.html",
    "title": "Namespace GameJamStarterKit.FXSystem | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.FXSystem Classes FXSpawner Spawns FX Units FXSpawnerItem An Item entry for an FX Spawner FXUnit Represents an FX GameObject for use with an FX Spawner. RandomizeAnimatorParameters Randomizes an animators parameters. RandomizeAnimatorParameters.RandomizeParameterData Data class defining a parameter to randomize Signaller Allows for execution of a coroutine to be stopped while waiting for a signal to be raised. Enums DespawnType Method of despawning an FX Unit RandomizeAnimatorParameters.RandomizeParameterType Defines when the parameter should be randomized SpawnScale Scale to spawn an FX Unit SpawnType Spawn type of an FX Unit"
  },
  "api/GameJamStarterKit.FXSystem.RandomizeAnimatorParameters.html": {
    "href": "api/GameJamStarterKit.FXSystem.RandomizeAnimatorParameters.html",
    "title": "Class RandomizeAnimatorParameters | Game Jam Starter Kit Documentation",
    "keywords": "Class RandomizeAnimatorParameters Randomizes an animators parameters. Inheritance System.Object RandomizeAnimatorParameters Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public class RandomizeAnimatorParameters : MonoBehaviour Fields Animator The animator to target Declaration public Animator Animator Field Value Type Description Animator Interval If RandomizeType is Interval, How often to randomize in seconds. Declaration public float Interval Field Value Type Description System.Single MaximumInterval If RandomizeType is IntervalRange, maximum time to randomize in seconds. Declaration public float MaximumInterval Field Value Type Description System.Single MaximumValue For number values, the maximum value to randomize by Declaration public float MaximumValue Field Value Type Description System.Single MinimumInterval If RandomizeType is IntervalRange, minimum time to randomize in seconds. Declaration public float MinimumInterval Field Value Type Description System.Single MinimumValue For number values, the minimum value to randomize by Declaration public float MinimumValue Field Value Type Description System.Single ParameterData Parameters being randomized. Declaration public List<RandomizeAnimatorParameters.RandomizeParameterData> ParameterData Field Value Type Description List < RandomizeAnimatorParameters.RandomizeParameterData > RandomizeType When should the value be randomized Declaration public RandomizeAnimatorParameters.RandomizeParameterType RandomizeType Field Value Type Description RandomizeAnimatorParameters.RandomizeParameterType UseAttachedAnimator Find the attached animator component on awake rather than manually setting it in the inspector? Declaration public bool UseAttachedAnimator Field Value Type Description System.Boolean Methods Randomize() Randomizes the parameters being targeted Declaration public void Randomize()"
  },
  "api/GameJamStarterKit.FXSystem.RandomizeAnimatorParameters.RandomizeParameterData.html": {
    "href": "api/GameJamStarterKit.FXSystem.RandomizeAnimatorParameters.RandomizeParameterData.html",
    "title": "Class RandomizeAnimatorParameters.RandomizeParameterData | Game Jam Starter Kit Documentation",
    "keywords": "Class RandomizeAnimatorParameters.RandomizeParameterData Data class defining a parameter to randomize Inheritance System.Object RandomizeAnimatorParameters.RandomizeParameterData Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public class RandomizeParameterData Fields MaximumValue if a number value and overriding the range, the maximum value Declaration public float MaximumValue Field Value Type Description System.Single MinimumValue if a number value and overriding the range, the minimum value Declaration public float MinimumValue Field Value Type Description System.Single OverrideRange If a number value, should the randomize range be overridden for this value? Declaration public bool OverrideRange Field Value Type Description System.Boolean ParameterKey Parameter key Declaration public string ParameterKey Field Value Type Description System.String ParameterType Type of the parameter Declaration public AnimatorControllerParameterType ParameterType Field Value Type Description AnimatorControllerParameterType"
  },
  "api/GameJamStarterKit.FXSystem.RandomizeAnimatorParameters.RandomizeParameterType.html": {
    "href": "api/GameJamStarterKit.FXSystem.RandomizeAnimatorParameters.RandomizeParameterType.html",
    "title": "Enum RandomizeAnimatorParameters.RandomizeParameterType | Game Jam Starter Kit Documentation",
    "keywords": "Enum RandomizeAnimatorParameters.RandomizeParameterType Defines when the parameter should be randomized Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public enum RandomizeParameterType Fields Name Description Awake FixedUpdate Interval IntervalRange Start"
  },
  "api/GameJamStarterKit.FXSystem.Signaller.html": {
    "href": "api/GameJamStarterKit.FXSystem.Signaller.html",
    "title": "Class Signaller | Game Jam Starter Kit Documentation",
    "keywords": "Class Signaller Allows for execution of a coroutine to be stopped while waiting for a signal to be raised. Inheritance System.Object Signaller Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public class Signaller : MonoBehaviour Fields ActiveSignal Declaration public string ActiveSignal Field Value Type Description System.String ProcessSignalNextFrame Declaration public bool ProcessSignalNextFrame Field Value Type Description System.Boolean Methods RaiseSignal(String) Raises a signal for a single frame Declaration public void RaiseSignal(string signal) Parameters Type Name Description System.String signal signal to raise WaitForSignal(String) Waits for the given signal to be raised. Signals will be raised for only one frame. Declaration public IEnumerator WaitForSignal(string signal) Parameters Type Name Description System.String signal Signal to wait for Returns Type Description IEnumerator"
  },
  "api/GameJamStarterKit.FXSystem.SpawnScale.html": {
    "href": "api/GameJamStarterKit.FXSystem.SpawnScale.html",
    "title": "Enum SpawnScale | Game Jam Starter Kit Documentation",
    "keywords": "Enum SpawnScale Scale to spawn an FX Unit Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public enum SpawnScale Fields Name Description IgnoreRelative KeepRelative"
  },
  "api/GameJamStarterKit.FXSystem.SpawnType.html": {
    "href": "api/GameJamStarterKit.FXSystem.SpawnType.html",
    "title": "Enum SpawnType | Game Jam Starter Kit Documentation",
    "keywords": "Enum SpawnType Spawn type of an FX Unit Namespace : GameJamStarterKit.FXSystem Assembly : cs.temp.dll.dll Syntax public enum SpawnType Fields Name Description AttachedToParent WorldLocation"
  },
  "api/GameJamStarterKit.GameObjectExtensions.html": {
    "href": "api/GameJamStarterKit.GameObjectExtensions.html",
    "title": "Class GameObjectExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class GameObjectExtensions Useful extensions for GameObject Inheritance System.Object GameObjectExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class GameObjectExtensions Methods DirectionTo(GameObject, GameObject) Gets the direction to another game object. Declaration public static Vector3 DirectionTo(this GameObject gameObject, GameObject other) Parameters Type Name Description GameObject gameObject this GameObject other the game object to point towards Returns Type Description Vector3 returns a normalized direction pointing towards DirectionTo(GameObject, Transform) Gets the direction to another transform Declaration public static Vector3 DirectionTo(this GameObject gameObject, Transform other) Parameters Type Name Description GameObject gameObject this Transform other the transform to point towards Returns Type Description Vector3 returns a normalized direction pointing towards DirectionTo(GameObject, Vector3) Gets the direction to a vector3 Declaration public static Vector3 DirectionTo(this GameObject gameObject, Vector3 other) Parameters Type Name Description GameObject gameObject this Vector3 other the position to point towards Returns Type Description Vector3 returns a normalized direction pointing towards Distance(GameObject, GameObject) Declaration public static float Distance(this GameObject gameObject, GameObject target) Parameters Type Name Description GameObject gameObject this GameObject target game object to get the distance to Returns Type Description System.Single the distance between this and the target Distance(GameObject, Transform) Declaration public static float Distance(this GameObject gameObject, Transform target) Parameters Type Name Description GameObject gameObject this Transform target transform to get the distance to Returns Type Description System.Single the distance between this and the target FindTypeInRadius<T>(GameObject, Single) Declaration public static List<T> FindTypeInRadius<T>(this GameObject gameObject, float radius) where T : Object Parameters Type Name Description GameObject gameObject this System.Single radius radius to search in Returns Type Description List <T> true if the type was found in the radius Type Parameters Name Description T Type to look for FindTypeInRadiusNoCollider<T>(GameObject, Single) Declaration public static List<T> FindTypeInRadiusNoCollider<T>(this GameObject gameObject, float radius) where T : Component Parameters Type Name Description GameObject gameObject this System.Single radius radius to search in Returns Type Description List <T> true if the type was found in the radius Type Parameters Name Description T Type to look for GetComponentInEntireObject(GameObject, Type) Gets the component anywhere in this objects hierarchy, searching from the root parent first. Declaration public static Component GetComponentInEntireObject(this GameObject gameObject, Type type) Parameters Type Name Description GameObject gameObject this game object Type type component type to look for Returns Type Description Component the component in this objects hierarchy GetComponentInEntireObject<T>(GameObject) Gets the component anywhere in this objects hierarchy, searching from the root parent first. Declaration public static T GetComponentInEntireObject<T>(this GameObject gameObject) Parameters Type Name Description GameObject gameObject this game object Returns Type Description T the component in this objects hierarchy Type Parameters Name Description T component type to look for GetOrAddComponent(GameObject, Type) Gets or adds a component of the given type Declaration public static Component GetOrAddComponent(this GameObject gameObject, Type type) Parameters Type Name Description GameObject gameObject this game object Type type component type ot get or add Returns Type Description Component the component gotten or added GetOrAddComponent<T>(GameObject) Gets or adds a component of the given type Declaration public static T GetOrAddComponent<T>(this GameObject gameObject) where T : Component Parameters Type Name Description GameObject gameObject this Returns Type Description T the component gotten or added Type Parameters Name Description T component type to get or add GetPath(GameObject, String) Declaration public static string GetPath(this GameObject gameObject, string separator = \"/\") Parameters Type Name Description GameObject gameObject this System.String separator string to separate the parent and child. Ex: Parent/Child/Child2 Returns Type Description System.String the path to this game object HasComponent<T>(GameObject) returns true if this GameObject has a component with the given type Declaration public static bool HasComponent<T>(this GameObject gameObject) Parameters Type Name Description GameObject gameObject this Returns Type Description System.Boolean true if this has a component with the type Type Parameters Name Description T type of component InstantiateRandomItem<T>(IEnumerable<T>, Transform) returns Object.Instantiate for a random item with the given parent. Declaration public static T InstantiateRandomItem<T>(this IEnumerable<T> objects, Transform parent) where T : Object Parameters Type Name Description IEnumerable <T> objects this Transform parent parent for the instantiated item Returns Type Description T Type Parameters Name Description T InstantiateRandomItem<T>(IEnumerable<T>, Transform, Boolean) returns Object.Instantiate for a random item with the given parent in world position or not. Declaration public static T InstantiateRandomItem<T>(this IEnumerable<T> objects, Transform parent, bool inWorldPosition) where T : Object Parameters Type Name Description IEnumerable <T> objects this Transform parent parent for the instantiated item System.Boolean inWorldPosition spawn in world position or not Returns Type Description T Type Parameters Name Description T InstantiateRandomItem<T>(IEnumerable<T>, Vector3) returns Object.Instantiate for a random item with the given position Declaration public static T InstantiateRandomItem<T>(this IEnumerable<T> objects, Vector3 position) where T : Object Parameters Type Name Description IEnumerable <T> objects this Vector3 position position to instantiate the item at Returns Type Description T Type Parameters Name Description T InstantiateRandomItem<T>(IEnumerable<T>, Vector3, Quaternion) returns Object.Instantiate for a random item with the given position and rotation Declaration public static T InstantiateRandomItem<T>(this IEnumerable<T> objects, Vector3 position, Quaternion rotation) where T : Object Parameters Type Name Description IEnumerable <T> objects this Vector3 position position to instantiate the item at Quaternion rotation rotation for the item Returns Type Description T Type Parameters Name Description T InstantiateRandomItem<T>(IEnumerable<T>, Vector3, Transform, Quaternion) returns Object.Instantiate for a random item with the given position and rotation Declaration public static T InstantiateRandomItem<T>(this IEnumerable<T> objects, Vector3 position, Transform parent, Quaternion rotation) where T : Object Parameters Type Name Description IEnumerable <T> objects this Vector3 position position to instantiate the item at Transform parent Quaternion rotation rotation for the item Returns Type Description T Type Parameters Name Description T IsVisibleTo(GameObject, Camera) Check if this game object's position is visible to the camera given consider IsVisibleTo(Renderer, Camera) if this object has a RendererComponent to check against this objects bounds instead Declaration public static bool IsVisibleTo(this GameObject gameObject, Camera cam) Parameters Type Name Description GameObject gameObject the game object to check Camera cam the camera to test Returns Type Description System.Boolean returns true if the object is visible to the camera MoveChildrenTo(GameObject, GameObject) Moves the children of this GameObject to the target GameObject Declaration public static void MoveChildrenTo(this GameObject from, GameObject to) Parameters Type Name Description GameObject from the GameObject to move from GameObject to the GameObject to move to"
  },
  "api/GameJamStarterKit.HealthSystem.DamageType.html": {
    "href": "api/GameJamStarterKit.HealthSystem.DamageType.html",
    "title": "Class DamageType | Game Jam Starter Kit Documentation",
    "keywords": "Class DamageType An abstract class for creating damage types that modify incoming damage or healing to a HealthComponent Inheritance System.Object DamageType NoneDamageType Namespace : GameJamStarterKit.HealthSystem Assembly : cs.temp.dll.dll Syntax public abstract class DamageType : ScriptableObject Constructors DamageType() Declaration protected DamageType() Fields DAMAGE_TYPES Declaration protected static readonly Dictionary<Type, DamageType> DAMAGE_TYPES Field Value Type Description Dictionary < Type , DamageType > Methods Get<T>() Gets an instance of the damage type passed to T Declaration public static T Get<T>() where T : DamageType Returns Type Description T an instance of the damage type T Type Parameters Name Description T the damage type to get ModifyDamageValue(ref Int32, HealthComponent) allows modification of incoming damage to a health component Declaration public abstract void ModifyDamageValue(ref int damage, HealthComponent healthComponent) Parameters Type Name Description System.Int32 damage damage to modify HealthComponent healthComponent the health component being damaged ModifyHealingValue(ref Int32, HealthComponent) allows modification of incoming healing to a health component Declaration public abstract void ModifyHealingValue(ref int healing, HealthComponent healthComponent) Parameters Type Name Description System.Int32 healing healing to modify HealthComponent healthComponent the health component being healed"
  },
  "api/GameJamStarterKit.HealthSystem.GameObjectHealthExtensions.html": {
    "href": "api/GameJamStarterKit.HealthSystem.GameObjectHealthExtensions.html",
    "title": "Class GameObjectHealthExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class GameObjectHealthExtensions Adds extension methods to GameObjects allowing easy access to HealthComponent Inheritance System.Object GameObjectHealthExtensions Namespace : GameJamStarterKit.HealthSystem Assembly : cs.temp.dll.dll Syntax public static class GameObjectHealthExtensions Methods Damage(GameObject, Int32, DamageType) applies to damage to this GameObject's HealthComponent. Does nothing if this doesn't have a HealthComponent Declaration public static void Damage(this GameObject gameObject, int amount, DamageType damageType = null) Parameters Type Name Description GameObject gameObject this System.Int32 amount damage to apply DamageType damageType damage type to use Damage<T>(GameObject, Int32) applies to damage to this GameObject's HealthComponent. Does nothing if this doesn't have a HealthComponent Declaration public static void Damage<T>(this GameObject gameObject, int amount) where T : DamageType Parameters Type Name Description GameObject gameObject this System.Int32 amount damage to apply Type Parameters Name Description T damage type to use GetCurrentHealth(GameObject) returns the current health for this GameObject's HealthComponent. Returns -1 if it has no component. Declaration public static int GetCurrentHealth(this GameObject gameObject) Parameters Type Name Description GameObject gameObject this Returns Type Description System.Int32 returns the current health of the health component if any. Returns -1 if there is no component. Heal(GameObject, Int32, DamageType) applies a heal to this GameObject's HealthComponent. Does nothing if this doesn't have a HealthComponent Declaration public static void Heal(this GameObject gameObject, int amount, DamageType damageType = null) Parameters Type Name Description GameObject gameObject this System.Int32 amount amount to heal for DamageType damageType damage type to use Heal<T>(GameObject, Int32) applies a heal to this GameObject's HealthComponent. Does nothing if this doesn't have a HealthComponent Declaration public static void Heal<T>(this GameObject gameObject, int amount) where T : DamageType Parameters Type Name Description GameObject gameObject this System.Int32 amount amount to heal for Type Parameters Name Description T damage type to use"
  },
  "api/GameJamStarterKit.HealthSystem.HealthComponent.html": {
    "href": "api/GameJamStarterKit.HealthSystem.HealthComponent.html",
    "title": "Class HealthComponent | Game Jam Starter Kit Documentation",
    "keywords": "Class HealthComponent A Quick solution to adding health to various types of GameObjects. Has unity events for health changes and death. Inheritance System.Object HealthComponent Namespace : GameJamStarterKit.HealthSystem Assembly : cs.temp.dll.dll Syntax public class HealthComponent : MonoBehaviour Fields CanExceedMaximumHealth Allows the current health to exceed the maximum health Declaration public bool CanExceedMaximumHealth Field Value Type Description System.Boolean ClampDamageAndHealing Clamps incoming damage or healing so it can never be a negative value or exceed maximum health Declaration public bool ClampDamageAndHealing Field Value Type Description System.Boolean MaximumHealth the maximum health for this component Declaration public int MaximumHealth Field Value Type Description System.Int32 OnHealthEmpty Called when this HealthComponent no longer has any health Declaration public UnityEvent OnHealthEmpty Field Value Type Description UnityEvent OnHealthGained Called when this HealthComponent gains health Passes the new current health Declaration public UnityIntEvent OnHealthGained Field Value Type Description UnityIntEvent OnHealthLost Called when this HealthComponent loses health Passes the new current health Declaration public UnityIntEvent OnHealthLost Field Value Type Description UnityIntEvent OnHealthPercentChanged Called when this HealthComponent's percentage changes. passes the current health percent. Declaration public UnityFloatEvent OnHealthPercentChanged Field Value Type Description UnityFloatEvent StrongAgainst Damage types this health component will take less damage and more healing from. Declaration public List<DamageType> StrongAgainst Field Value Type Description List < DamageType > WeakAgainst Damage types this health component will take more damage and less healing from. Declaration public List<DamageType> WeakAgainst Field Value Type Description List < DamageType > Properties Health the current health on this component Declaration public int Health { get; } Property Value Type Description System.Int32 NormalizedCurrentHealth returns the current health as a 0 to 1 range Declaration public float NormalizedCurrentHealth { get; } Property Value Type Description System.Single Methods Damage(Int32, DamageType) applies the amount of damage to this HealthComponent Declaration public virtual void Damage(int amount, DamageType damageType = null) Parameters Type Name Description System.Int32 amount damage to apply DamageType damageType damage type to use. null will use NoneDamageType Damage<T>(Int32) applies the amount of damage to this HealthComponent Declaration public virtual void Damage<T>(int amount) where T : DamageType Parameters Type Name Description System.Int32 amount damage to apply Type Parameters Name Description T damage type to use. Event_Damage(Int32) Damage(Int32, DamageType) which can be invoked from a UnityEvent Declaration public void Event_Damage(int amount) Parameters Type Name Description System.Int32 amount Event_Heal(Int32) Heal(Int32, DamageType) which can be invoked from a UnityEvent Declaration public void Event_Heal(int amount) Parameters Type Name Description System.Int32 amount amount to heal for Heal(Int32, DamageType) applies the amount of healing to this HealthComponent Declaration public virtual void Heal(int amount, DamageType damageType = null) Parameters Type Name Description System.Int32 amount heal to apply DamageType damageType damage type to use. null will use NoneDamageType Heal<T>(Int32) applies the amount of healing to this HealthComponent Declaration public virtual void Heal<T>(int amount) where T : DamageType Parameters Type Name Description System.Int32 amount heal to apply Type Parameters Name Description T damage type to use. IsStrongAgainst(Type) Check if this health component is strong against a given type. Declaration public bool IsStrongAgainst(Type type) Parameters Type Name Description Type type type to check Returns Type Description System.Boolean returns true if this is strong against the type IsStrongAgainst<T>() Check if this health component is strong against a given type. Declaration public bool IsStrongAgainst<T>() where T : DamageType Returns Type Description System.Boolean returns true if this is strong against the type Type Parameters Name Description T type to check IsWeakAgainst(Type) Check if this health component is weak against a given type. Declaration public bool IsWeakAgainst(Type type) Parameters Type Name Description Type type type to check Returns Type Description System.Boolean returns true if this is weak to the type IsWeakAgainst<T>() Check if this health component is weak against a given type. Declaration public bool IsWeakAgainst<T>() where T : DamageType Returns Type Description System.Boolean returns true if this is weak to the type Type Parameters Name Description T type to check Start() Declaration protected virtual void Start()"
  },
  "api/GameJamStarterKit.HealthSystem.html": {
    "href": "api/GameJamStarterKit.HealthSystem.html",
    "title": "Namespace GameJamStarterKit.HealthSystem | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.HealthSystem Classes DamageType An abstract class for creating damage types that modify incoming damage or healing to a HealthComponent GameObjectHealthExtensions Adds extension methods to GameObjects allowing easy access to HealthComponent HealthComponent A Quick solution to adding health to various types of GameObjects. Has unity events for health changes and death. NoneDamageType Provides a basic implementation of DamageType that applies no modifications."
  },
  "api/GameJamStarterKit.HealthSystem.NoneDamageType.html": {
    "href": "api/GameJamStarterKit.HealthSystem.NoneDamageType.html",
    "title": "Class NoneDamageType | Game Jam Starter Kit Documentation",
    "keywords": "Class NoneDamageType Provides a basic implementation of DamageType that applies no modifications. Inheritance System.Object DamageType NoneDamageType Inherited Members DamageType.DAMAGE_TYPES DamageType.Get<T>() Namespace : GameJamStarterKit.HealthSystem Assembly : cs.temp.dll.dll Syntax public class NoneDamageType : DamageType Methods ModifyDamageValue(ref Int32, HealthComponent) Declaration public override void ModifyDamageValue(ref int damage, HealthComponent healthComponent) Parameters Type Name Description System.Int32 damage HealthComponent healthComponent Overrides DamageType.ModifyDamageValue(ref Int32, HealthComponent) ModifyHealingValue(ref Int32, HealthComponent) Declaration public override void ModifyHealingValue(ref int healing, HealthComponent healthComponent) Parameters Type Name Description System.Int32 healing HealthComponent healthComponent Overrides DamageType.ModifyHealingValue(ref Int32, HealthComponent)"
  },
  "api/GameJamStarterKit.html": {
    "href": "api/GameJamStarterKit.html",
    "title": "Namespace GameJamStarterKit | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit Classes AnimationParameter A serialized Animation Parameter AnimatorEventBridge Allows for Animations to call UnityEvents using a list of AnimatorEventData AnimatorEventData Maps a UnityEvent to a key. AnimatorExtensions Useful extensions for Animators AsyncUnityUtility Utility class for using async/await with unity. AudioClipCollection A collection of AudioClips that can be played in sequence or randomly. AudioSourceCallback Adds callbacks for when an attached audio source starts and stops playback. AudioSourceExtensions Useful extensions for AudioSources AudioSourceUnityEvent BasePool<T> Starting point to creating a pool of objects. See GameJamStarterKit.Audio.AudioPool for an example usage. Collider2DExtnesions Useful Collider2D Extensions ColliderExtensions Useful Collider extensions ComparableExtensions Useful extensions for IComparable GameObjectExtensions Useful extensions for GameObject KitDebug Provides some useful debugging tools. KitMath Helpful math functions KitRandom Provides useful Random functions. KItSceneManager Helpful scene management functions LayerMaskExtensions Useful extensions for LayerMasks LinqExtensions Useful extensions for Linq PersistentSingleton<T> A base class for a non MonoBehaviour singleton that will persist through scene changes. PersistentSingletonBehaviour<T> A Base class for a singleton that will persist through scene changes. RectExtensions Extension methods for Rects RendererExtensions Useful renderer extensions RigidbodyExtensions Useful Rigidbody and Rigidbody2D Extensions Singleton<T> A base class for a singleton that will not persist through scene changes. SingletonBehaviour<T> A base class for a MonoBehaviour singleton that will not persist through scene changes. TransformExtensions Useful Transform Extensions VectorExtensions Useful Vector Extensions Structs TimeSince Measures time since this struct was initialized. Implicitly converts to a float. Example: TimeSince timeSinceStart = 0f will measure the time since the moment timeSinceStart was initialized Usage: if ( timeSinceStart > 10f ) { // it's been more than 10 seconds! }; https://garry.tv/2018/01/16/timesince/ UnscaledTimeSince Measures unscaled time since this struct was initialized. Implicitly converts to a float. Example: UnscaledTimeSince timeSinceStart = 0f will measure the unscaled time since the moment timeSinceStart was initialized Usage: ( timeSinceStart > 10f ) { // it's been more than 10 unscaled seconds! }; https://garry.tv/2018/01/16/timesince/ Enums KitAxis X Y Z Axis enum KitAxisFlags X Y Z Axis flags StandardSize Common sizes represented as an enum."
  },
  "api/GameJamStarterKit.KitAxis.html": {
    "href": "api/GameJamStarterKit.KitAxis.html",
    "title": "Enum KitAxis | Game Jam Starter Kit Documentation",
    "keywords": "Enum KitAxis X Y Z Axis enum Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public enum KitAxis Fields Name Description X Y Z"
  },
  "api/GameJamStarterKit.KitAxisFlags.html": {
    "href": "api/GameJamStarterKit.KitAxisFlags.html",
    "title": "Enum KitAxisFlags | Game Jam Starter Kit Documentation",
    "keywords": "Enum KitAxisFlags X Y Z Axis flags Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public enum KitAxisFlags Fields Name Description None X Y Z"
  },
  "api/GameJamStarterKit.KitDebug.html": {
    "href": "api/GameJamStarterKit.KitDebug.html",
    "title": "Class KitDebug | Game Jam Starter Kit Documentation",
    "keywords": "Class KitDebug Provides some useful debugging tools. Inheritance System.Object KitDebug Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class KitDebug Methods DrawPoint(Vector3) Draws a point Declaration public static void DrawPoint(Vector3 point) Parameters Type Name Description Vector3 point point to draw DrawPoint(Vector3, Color) Draws a point with a color specified Declaration public static void DrawPoint(Vector3 point, Color color) Parameters Type Name Description Vector3 point point to draw Color color PrintText() runs Debug.Log(\"KitDebug.PrintText\"), useful for checking if code is reached or events are fired. Declaration public static void PrintText()"
  },
  "api/GameJamStarterKit.KitMath.html": {
    "href": "api/GameJamStarterKit.KitMath.html",
    "title": "Class KitMath | Game Jam Starter Kit Documentation",
    "keywords": "Class KitMath Helpful math functions Inheritance System.Object KitMath Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class KitMath Methods IsPositive(Single) Check if a number is positive Declaration public static bool IsPositive(float value) Parameters Type Name Description System.Single value the number to check Returns Type Description System.Boolean returns true if the number is positive, otherwise false NormalizeToRange(Single, Single, Single, Single, Single) Normalizes a value from once range to another. Declaration public static float NormalizeToRange(float currentValue, float currentMin, float currentMax, float targetMin, float targetMax) Parameters Type Name Description System.Single currentValue the current value System.Single currentMin the current minimum value System.Single currentMax the current maximum value System.Single targetMin the target minimum value System.Single targetMax the target maximum value Returns Type Description System.Single the value normalized to the new range"
  },
  "api/GameJamStarterKit.KitRandom.html": {
    "href": "api/GameJamStarterKit.KitRandom.html",
    "title": "Class KitRandom | Game Jam Starter Kit Documentation",
    "keywords": "Class KitRandom Provides useful Random functions. Inheritance System.Object KitRandom Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class KitRandom Methods CoinToss() returns true or false randomly. Declaration public static bool CoinToss() Returns Type Description System.Boolean DiceRoll(Int32) Rolls a dice with a given amount of sides Declaration public static int DiceRoll(int sides) Parameters Type Name Description System.Int32 sides amount of sides to roll. Returns Type Description System.Int32 RandomSign() Returns 1 or -1 randomly. Declaration public static int RandomSign() Returns Type Description System.Int32 Rotation(Vector3, Vector3) Returns a random rotation between the given min and max rotation. [inclusive] Declaration public static Quaternion Rotation(Vector3 min, Vector3 max) Parameters Type Name Description Vector3 min Minimum rotation Vector3 max Maximum rotation Returns Type Description Quaternion rotation between the min and max [inclusive] Vector3(Vector3, Vector3) Returns a random Vector3 between the given min and max. [inclusive] Declaration public static Vector3 Vector3(Vector3 min, Vector3 max) Parameters Type Name Description Vector3 min Minimum Vector3 Vector3 max Maximum Vector3 Returns Type Description Vector3 position inside the min and max [inclusive] WeightedCoinToss(Single) returns a random coin flip, with the given weight between -1 (false) and 1 (true). Declaration public static bool WeightedCoinToss(float weight) Parameters Type Name Description System.Single weight value between -1 and 1, -1 being a false bias and 1 being a true bias Returns Type Description System.Boolean"
  },
  "api/GameJamStarterKit.KItSceneManager.html": {
    "href": "api/GameJamStarterKit.KItSceneManager.html",
    "title": "Class KItSceneManager | Game Jam Starter Kit Documentation",
    "keywords": "Class KItSceneManager Helpful scene management functions Inheritance System.Object KItSceneManager Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class KItSceneManager Methods ReloadCurrentScene() Reloads the scene currently active. Declaration public static void ReloadCurrentScene()"
  },
  "api/GameJamStarterKit.LayerMaskExtensions.html": {
    "href": "api/GameJamStarterKit.LayerMaskExtensions.html",
    "title": "Class LayerMaskExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class LayerMaskExtensions Useful extensions for LayerMasks Inheritance System.Object LayerMaskExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class LayerMaskExtensions Methods HasLayer(LayerMask, Int32) Determine if a LayerMask has the layer given Declaration public static bool HasLayer(this LayerMask mask, int layer) Parameters Type Name Description LayerMask mask the mask to check System.Int32 layer the layer to check for Returns Type Description System.Boolean returns true if the layer has the mask given HasLayer(LayerMask, String) Determine if a LayerMask has the layer given, by name. Declaration public static bool HasLayer(this LayerMask mask, string layer) Parameters Type Name Description LayerMask mask the mask to check System.String layer the layer to check for Returns Type Description System.Boolean returns true if the layer has the mask given"
  },
  "api/GameJamStarterKit.LinqExtensions.html": {
    "href": "api/GameJamStarterKit.LinqExtensions.html",
    "title": "Class LinqExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class LinqExtensions Useful extensions for Linq Inheritance System.Object LinqExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class LinqExtensions Methods ForEach<T>(IEnumerable<T>, Action<T, Int32>) performs action on each item, with a counter Declaration public static IEnumerable<T> ForEach<T>(this IEnumerable<T> enumerable, Action<T, int> action) Parameters Type Name Description IEnumerable <T> enumerable Action <T, System.Int32 > action action to perform Returns Type Description IEnumerable <T> Type Parameters Name Description T ForEach<T>(IEnumerable<T>, Action<T>) performs action on each item Declaration public static IEnumerable<T> ForEach<T>(this IEnumerable<T> enumerable, Action<T> action) Parameters Type Name Description IEnumerable <T> enumerable Action <T> action the action to perform Returns Type Description IEnumerable <T> Type Parameters Name Description T IsNullOrEmpty<T>(IEnumerable<T>) returns true if the enumerable is null or has no items. Declaration public static bool IsNullOrEmpty<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable Returns Type Description System.Boolean Type Parameters Name Description T RandomItem<T>(IEnumerable<T>) returns a random item using UnityEngine.Random Declaration public static T RandomItem<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable Returns Type Description T Type Parameters Name Description T Shuffle<T>(ICollection<T>) shuffles this collection using UnityEngine.Random Declaration public static void Shuffle<T>(this ICollection<T> collection) Parameters Type Name Description ICollection <T> collection Type Parameters Name Description T"
  },
  "api/GameJamStarterKit.Modifiers.html": {
    "href": "api/GameJamStarterKit.Modifiers.html",
    "title": "Namespace GameJamStarterKit.Modifiers | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.Modifiers Classes Modifiable<T> Base class for all modifiable objects ModifiableValue<T> Represents a value that can have modifiers applied to it. Modifier Base class for any type of modifier applied to a Modifiable<T> ValueModifier<T> A modifier for value types Interfaces IModifiable IModifier Base interface for Modifier"
  },
  "api/GameJamStarterKit.Modifiers.IModifiable.html": {
    "href": "api/GameJamStarterKit.Modifiers.IModifiable.html",
    "title": "Interface IModifiable | Game Jam Starter Kit Documentation",
    "keywords": "Interface IModifiable Namespace : GameJamStarterKit.Modifiers Assembly : cs.temp.dll.dll Syntax public interface IModifiable Methods AddKeyedModifier(IModifier, String) Adds a unique IModifier to the modifier stack using the key given Declaration bool AddKeyedModifier(IModifier modifier, string key) Parameters Type Name Description IModifier modifier the modifier to add System.String key the key to store it at Returns Type Description System.Boolean returns true if the modifier was successfully added. False if the key is already in use. AddModifier(IModifier) Adds an IModifier to the modifier stack Declaration void AddModifier(IModifier modifier) Parameters Type Name Description IModifier modifier the modifier to add RemoveKeyedModifier(String) Removes a modifier for the given key Declaration bool RemoveKeyedModifier(string key) Parameters Type Name Description System.String key the key to remove Returns Type Description System.Boolean returns true if the key was found and removed. RemoveModifier(IModifier) Removes an IModifier from the modifier stack Declaration void RemoveModifier(IModifier modifier) Parameters Type Name Description IModifier modifier the modifier to remove"
  },
  "api/GameJamStarterKit.Modifiers.IModifier.html": {
    "href": "api/GameJamStarterKit.Modifiers.IModifier.html",
    "title": "Interface IModifier | Game Jam Starter Kit Documentation",
    "keywords": "Interface IModifier Base interface for Modifier Namespace : GameJamStarterKit.Modifiers Assembly : cs.temp.dll.dll Syntax public interface IModifier Methods OnAttach(IModifiable) Called when this Modifier is attached to a IModifiable Declaration void OnAttach(IModifiable modifiable) Parameters Type Name Description IModifiable modifiable the modifiable attached to OnDetach(IModifiable) Called when this Modifier is detached from a IModifiable Declaration void OnDetach(IModifiable modifiable) Parameters Type Name Description IModifiable modifiable the modifiable detached from"
  },
  "api/GameJamStarterKit.Modifiers.Modifiable-1.html": {
    "href": "api/GameJamStarterKit.Modifiers.Modifiable-1.html",
    "title": "Class Modifiable<T> | Game Jam Starter Kit Documentation",
    "keywords": "Class Modifiable<T> Base class for all modifiable objects Inheritance System.Object Modifiable<T> ModifiableValue<T> Implements IModifiable Namespace : GameJamStarterKit.Modifiers Assembly : cs.temp.dll.dll Syntax public abstract class Modifiable<T> : IModifiable where T : Modifier, IModifier Type Parameters Name Description T the type of modifiers expected Properties Modifiers Returns the modifiers combine with the keyed modifiers, sorted by their order. Declaration public IEnumerable<T> Modifiers { get; } Property Value Type Description IEnumerable <T> Methods AddKeyedModifier(IModifier, String) Adds a unique IModifier to the modifier stack using the key given Declaration public bool AddKeyedModifier(IModifier modifier, string key) Parameters Type Name Description IModifier modifier the modifier to add System.String key the key to store it at Returns Type Description System.Boolean returns true if the modifier was successfully added. False if the key is already in use. AddModifier(IModifier) Adds an IModifier to the modifier stack Declaration public void AddModifier(IModifier modifier) Parameters Type Name Description IModifier modifier the modifier to add HasModifier(T) Check if this has the Modifier given Declaration public bool HasModifier(T modifier) Parameters Type Name Description T modifier the modifier to check for Returns Type Description System.Boolean Returns true if this has the modifier RemoveKeyedModifier(String) Removes a modifier for the given key Declaration public bool RemoveKeyedModifier(string key) Parameters Type Name Description System.String key the key to remove Returns Type Description System.Boolean returns true if the key was found and removed. RemoveModifier(IModifier) Removes an IModifier from the modifier stack Declaration public void RemoveModifier(IModifier modifier) Parameters Type Name Description IModifier modifier the modifier to remove Implements IModifiable"
  },
  "api/GameJamStarterKit.Modifiers.ModifiableValue-1.html": {
    "href": "api/GameJamStarterKit.Modifiers.ModifiableValue-1.html",
    "title": "Class ModifiableValue<T> | Game Jam Starter Kit Documentation",
    "keywords": "Class ModifiableValue<T> Represents a value that can have modifiers applied to it. Inheritance System.Object Modifiable < ValueModifier <T>> ModifiableValue<T> Implements IModifiable Inherited Members Modifiable<ValueModifier<T>>.Modifiers Modifiable<ValueModifier<T>>.HasModifier(ValueModifier<T>) Modifiable<ValueModifier<T>>.AddModifier(IModifier) Modifiable<ValueModifier<T>>.RemoveModifier(IModifier) Modifiable<ValueModifier<T>>.AddKeyedModifier(IModifier, String) Modifiable<ValueModifier<T>>.RemoveKeyedModifier(String) Namespace : GameJamStarterKit.Modifiers Assembly : cs.temp.dll.dll Syntax public class ModifiableValue<T> : Modifiable<ValueModifier<T>>, IModifiable Type Parameters Name Description T Constructors ModifiableValue() Creates a new instance of this using default(T) Declaration public ModifiableValue() ModifiableValue(T) Creates a new instance of this using the base value given Declaration public ModifiableValue(T value) Parameters Type Name Description T value the base value Fields BaseValue The value of this modifiable before modifiers are applied. Declaration public T BaseValue Field Value Type Description T ValueType Gets the type of value this represents Declaration public readonly Type ValueType Field Value Type Description Type Properties ModifiedValue Gets the modified value Declaration public T ModifiedValue { get; } Property Value Type Description T Operators Implicit(T to ModifiableValue<T>) Declaration public static implicit operator ModifiableValue<T>(T value) Parameters Type Name Description T value Returns Type Description ModifiableValue <T> Implements IModifiable"
  },
  "api/GameJamStarterKit.Modifiers.Modifier.html": {
    "href": "api/GameJamStarterKit.Modifiers.Modifier.html",
    "title": "Class Modifier | Game Jam Starter Kit Documentation",
    "keywords": "Class Modifier Base class for any type of modifier applied to a Modifiable<T> Inheritance System.Object Modifier ValueModifier<T> Implements IModifier Namespace : GameJamStarterKit.Modifiers Assembly : cs.temp.dll.dll Syntax public abstract class Modifier : IModifier Constructors Modifier(Single, Int32) Creates a new instance of this with a given duration Declaration public Modifier(float duration = 0F, int order = 0) Parameters Type Name Description System.Single duration the duration/lifetime of this modifier System.Int32 order the sorting order for this modifier. Lower values are processed first Fields Duration The lifetime of this modifier Declaration public float Duration Field Value Type Description System.Single Order The sorting order for this modifier. Lower values are processed first. Declaration public int Order Field Value Type Description System.Int32 Properties Parent The parent of this modifier Declaration public IModifiable Parent { get; } Property Value Type Description IModifiable Methods Detach() Detaches this modifier from its parent. Declaration public void Detach() OnAttach(IModifiable) Called when this Modifier is attached to a IModifiable Declaration public virtual void OnAttach(IModifiable modifiable) Parameters Type Name Description IModifiable modifiable the modifiable attached to OnDetach(IModifiable) Called when this Modifier is detached from a IModifiable Declaration public virtual void OnDetach(IModifiable modifiable) Parameters Type Name Description IModifiable modifiable the modifiable detached from Implements IModifier"
  },
  "api/GameJamStarterKit.Modifiers.ValueModifier-1.html": {
    "href": "api/GameJamStarterKit.Modifiers.ValueModifier-1.html",
    "title": "Class ValueModifier<T> | Game Jam Starter Kit Documentation",
    "keywords": "Class ValueModifier<T> A modifier for value types Inheritance System.Object Modifier ValueModifier<T> Implements IModifier Inherited Members Modifier.Order Modifier.Parent Modifier.Duration Modifier.Detach() Modifier.OnDetach(IModifiable) Namespace : GameJamStarterKit.Modifiers Assembly : cs.temp.dll.dll Syntax public class ValueModifier<T> : Modifier, IModifier Type Parameters Name Description T the type of value to modify Constructors ValueModifier(Func<T, T>, Single, Int32) Creates a new value modifier Declaration public ValueModifier(Func<T, T> applyModifier, float duration = 0F, int order = 0) Parameters Type Name Description Func <T, T> applyModifier the function to perform on the base value being modified System.Single duration the lifetime of this modifier System.Int32 order Fields TargetType The type of values this modifies Declaration public readonly Type TargetType Field Value Type Description Type Properties ModifyValue Declaration public Func<T, T> ModifyValue { get; } Property Value Type Description Func <T, T> Methods OnAttach(IModifiable) Called when this Modifier is attached to a IModifiable Declaration public override void OnAttach(IModifiable modifiable) Parameters Type Name Description IModifiable modifiable the modifiable attached to Overrides Modifier.OnAttach(IModifiable) Implements IModifier"
  },
  "api/GameJamStarterKit.PersistentSingleton-1.html": {
    "href": "api/GameJamStarterKit.PersistentSingleton-1.html",
    "title": "Class PersistentSingleton<T> | Game Jam Starter Kit Documentation",
    "keywords": "Class PersistentSingleton<T> A base class for a non MonoBehaviour singleton that will persist through scene changes. Inheritance System.Object Singleton <T> PersistentSingleton<T> Inherited Members Singleton<T>.Instance Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public class PersistentSingleton<T> : Singleton<T> where T : PersistentSingleton<T>, new() Type Parameters Name Description T Constructors PersistentSingleton() Declaration protected PersistentSingleton()"
  },
  "api/GameJamStarterKit.PersistentSingletonBehaviour-1.html": {
    "href": "api/GameJamStarterKit.PersistentSingletonBehaviour-1.html",
    "title": "Class PersistentSingletonBehaviour<T> | Game Jam Starter Kit Documentation",
    "keywords": "Class PersistentSingletonBehaviour<T> A Base class for a singleton that will persist through scene changes. Inheritance System.Object SingletonBehaviour <T> PersistentSingletonBehaviour<T> Inherited Members SingletonBehaviour<T>.Instance Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public abstract class PersistentSingletonBehaviour<T> : SingletonBehaviour<T> where T : PersistentSingletonBehaviour<T> Type Parameters Name Description T Methods Awake() Declaration protected override void Awake() Overrides GameJamStarterKit.SingletonBehaviour<T>.Awake()"
  },
  "api/GameJamStarterKit.RectExtensions.html": {
    "href": "api/GameJamStarterKit.RectExtensions.html",
    "title": "Class RectExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class RectExtensions Extension methods for Rects Inheritance System.Object RectExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class RectExtensions Methods RandomPoint(Rect) gets a random point inside the given rect Declaration public static Vector2 RandomPoint(this Rect rect) Parameters Type Name Description Rect rect the rect to return a point inside of Returns Type Description Vector2 returns a random point inside of the given rect"
  },
  "api/GameJamStarterKit.RendererExtensions.html": {
    "href": "api/GameJamStarterKit.RendererExtensions.html",
    "title": "Class RendererExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class RendererExtensions Useful renderer extensions Inheritance System.Object RendererExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class RendererExtensions Methods IsVisibleTo(Renderer, Camera) Check if a renderer can be seen by the Camera Declaration public static bool IsVisibleTo(this Renderer renderer, Camera cam) Parameters Type Name Description Renderer renderer the renderer to check Camera cam the camera to test against Returns Type Description System.Boolean returns true if the renderer's bounds are within the cameras frustum"
  },
  "api/GameJamStarterKit.RigidbodyExtensions.html": {
    "href": "api/GameJamStarterKit.RigidbodyExtensions.html",
    "title": "Class RigidbodyExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class RigidbodyExtensions Useful Rigidbody and Rigidbody2D Extensions Inheritance System.Object RigidbodyExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class RigidbodyExtensions Methods Freeze(Rigidbody) Sets a Rigidbody to kinematic and calls Stop(Rigidbody) Declaration public static void Freeze(this Rigidbody rigidbody) Parameters Type Name Description Rigidbody rigidbody the Rigidbody to freeze Freeze(Rigidbody2D) Sets a Rigidbody2D to kinematic and calls Stop(Rigidbody2D) Declaration public static void Freeze(this Rigidbody2D rigidbody) Parameters Type Name Description Rigidbody2D rigidbody the Rigidbody2D to freeze Stop(Rigidbody) Stops all velocity on a Rigidbody Declaration public static void Stop(this Rigidbody rigidbody) Parameters Type Name Description Rigidbody rigidbody the Rigidbody to stop Stop(Rigidbody2D) Stops all velocity on a Rigidbody2D Declaration public static void Stop(this Rigidbody2D rigidbody) Parameters Type Name Description Rigidbody2D rigidbody the Rigidbody2D to stop Unfreeze(Rigidbody) Sets a Rigidbody's IsKinematic to false. Declaration public static void Unfreeze(this Rigidbody rigidbody) Parameters Type Name Description Rigidbody rigidbody the Rigidbody to unfreeze Unfreeze(Rigidbody2D) Sets a Rigidbody2D's IsKinematic to false. Declaration public static void Unfreeze(this Rigidbody2D rigidbody) Parameters Type Name Description Rigidbody2D rigidbody the Rigidbody2D to unfreeze"
  },
  "api/GameJamStarterKit.Singleton-1.html": {
    "href": "api/GameJamStarterKit.Singleton-1.html",
    "title": "Class Singleton<T> | Game Jam Starter Kit Documentation",
    "keywords": "Class Singleton<T> A base class for a singleton that will not persist through scene changes. Inheritance System.Object Singleton<T> PersistentSingleton<T> Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public class Singleton<T> where T : new() Type Parameters Name Description T Constructors Singleton() Declaration protected Singleton() Properties Instance Returns the current instance of this singleton or creates one if one isn't found Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "api/GameJamStarterKit.SingletonBehaviour-1.html": {
    "href": "api/GameJamStarterKit.SingletonBehaviour-1.html",
    "title": "Class SingletonBehaviour<T> | Game Jam Starter Kit Documentation",
    "keywords": "Class SingletonBehaviour<T> A base class for a MonoBehaviour singleton that will not persist through scene changes. Inheritance System.Object SingletonBehaviour<T> BackgroundMusic PersistentSingletonBehaviour<T> View Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public abstract class SingletonBehaviour<T> : MonoBehaviour where T : SingletonBehaviour<T> Type Parameters Name Description T Properties Instance Returns the current instance of this singleton or creates one if one isn't found. Declaration public static T Instance { get; } Property Value Type Description T Methods Awake() Declaration protected virtual void Awake()"
  },
  "api/GameJamStarterKit.StandardSize.html": {
    "href": "api/GameJamStarterKit.StandardSize.html",
    "title": "Enum StandardSize | Game Jam Starter Kit Documentation",
    "keywords": "Enum StandardSize Common sizes represented as an enum. Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public enum StandardSize Fields Name Description ExtraLarge ExtraSmall Large Medium Small"
  },
  "api/GameJamStarterKit.TimeSince.html": {
    "href": "api/GameJamStarterKit.TimeSince.html",
    "title": "Struct TimeSince | Game Jam Starter Kit Documentation",
    "keywords": "Struct TimeSince Measures time since this struct was initialized. Implicitly converts to a float. Example: TimeSince timeSinceStart = 0f will measure the time since the moment timeSinceStart was initialized Usage: if ( timeSinceStart > 10f ) { // it's been more than 10 seconds! }; https://garry.tv/2018/01/16/timesince/ Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public struct TimeSince Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(TimeSince to Single) Declaration public static implicit operator float (TimeSince ts) Parameters Type Name Description TimeSince ts Returns Type Description System.Single Implicit(Single to TimeSince) Declaration public static implicit operator TimeSince(float ts) Parameters Type Name Description System.Single ts Returns Type Description TimeSince"
  },
  "api/GameJamStarterKit.TransformExtensions.html": {
    "href": "api/GameJamStarterKit.TransformExtensions.html",
    "title": "Class TransformExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class TransformExtensions Useful Transform Extensions Inheritance System.Object TransformExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class TransformExtensions Methods AddLocalPosition(Transform, Vector3) adds v to this transforms local position Declaration public static void AddLocalPosition(this Transform transform, Vector3 v) Parameters Type Name Description Transform transform Vector3 v Vector to add AddLocalX(Transform, Single) adds x to this transforms localPosition.x Declaration public static void AddLocalX(this Transform transform, float x) Parameters Type Name Description Transform transform System.Single x value to add AddLocalY(Transform, Single) adds y to this transforms localPosition.y Declaration public static void AddLocalY(this Transform transform, float y) Parameters Type Name Description Transform transform System.Single y value to add AddLocalZ(Transform, Single) adds z to this transforms localPosition.z Declaration public static void AddLocalZ(this Transform transform, float z) Parameters Type Name Description Transform transform System.Single z value to add AddPosition(Transform, Vector3) adds v to this transforms position Declaration public static void AddPosition(this Transform transform, Vector3 v) Parameters Type Name Description Transform transform Vector3 v Vector to add AddRotation(Transform, Quaternion) adds to this transforms rotation with the given quaternion Declaration public static void AddRotation(this Transform transform, Quaternion rotation) Parameters Type Name Description Transform transform Quaternion rotation rotation to add AddRotation(Transform, Vector3) adds to this transforms rotation with the given euler angle rotation Declaration public static void AddRotation(this Transform transform, Vector3 rotation) Parameters Type Name Description Transform transform Vector3 rotation euler rotation to add AddX(Transform, Single) adds x to this transforms position.x Declaration public static void AddX(this Transform transform, float x) Parameters Type Name Description Transform transform System.Single x value to add AddY(Transform, Single) adds y to this transforms position.y Declaration public static void AddY(this Transform transform, float y) Parameters Type Name Description Transform transform System.Single y value to add AddZ(Transform, Single) adds z to this transforms position.z Declaration public static void AddZ(this Transform transform, float z) Parameters Type Name Description Transform transform System.Single z value to add DirectionTo(Transform, GameObject) Gets the direction to a game object Declaration public static Vector3 DirectionTo(this Transform transform, GameObject other) Parameters Type Name Description Transform transform this GameObject other the game object to point towards Returns Type Description Vector3 returns a normalized direction pointing towards DirectionTo(Transform, Transform) Gets the direction to a transform Declaration public static Vector3 DirectionTo(this Transform transform, Transform other) Parameters Type Name Description Transform transform this Transform other the transform to point towards Returns Type Description Vector3 returns a normalized direction pointing towards DirectionTo(Transform, Vector3) Gets the direction to a position Declaration public static Vector3 DirectionTo(this Transform transform, Vector3 other) Parameters Type Name Description Transform transform this Vector3 other the position to point towards Returns Type Description Vector3 returns a normalized direction pointing towards Distance(Transform, Transform) returns the distance between this and target transform Declaration public static float Distance(this Transform transform, Transform target) Parameters Type Name Description Transform transform this Transform target target transform Returns Type Description System.Single The distance between this and the target Distance(Transform, Vector3) returns the distance between this and target vector3 Declaration public static float Distance(this Transform transform, Vector3 target) Parameters Type Name Description Transform transform this Vector3 target target position Returns Type Description System.Single the distance between this and the target FindTypeInRadius<T>(Transform, Single) returns a list of the given type inside the given radius around this transform Declaration public static List<T> FindTypeInRadius<T>(this Transform transform, float radius) where T : Object Parameters Type Name Description Transform transform System.Single radius radius to check for type in Returns Type Description List <T> Type Parameters Name Description T FindTypeInRadiusNoCollider<T>(Transform, Single) returns a list of the given type inside the given radius around this transform without using Physics. This uses FindObjectsOfType and is an expensive method. Avoid using in Update Declaration public static List<T> FindTypeInRadiusNoCollider<T>(this Transform transform, float radius) where T : Component Parameters Type Name Description Transform transform System.Single radius Returns Type Description List <T> Type Parameters Name Description T GetComponentInEntireObject(Transform, Type) Gets the component anywhere in this objects hierarchy, searching from the root parent first. Declaration public static Component GetComponentInEntireObject(this Transform transform, Type type) Parameters Type Name Description Transform transform this transform Type type component type to look for Returns Type Description Component the component in this objects hierarchy GetComponentInEntireObject<T>(Transform) Gets the component anywhere in this objects hierarchy, searching from the root parent first. Declaration public static T GetComponentInEntireObject<T>(this Transform transform) Parameters Type Name Description Transform transform this transform Returns Type Description T the component in this objects hierarchy Type Parameters Name Description T component type to look for GetPath(Transform, String) Returns the path to this transform's game object with an optional separator string Declaration public static string GetPath(this Transform transform, string separator = \"/\") Parameters Type Name Description Transform transform System.String separator string to separate the parent and child. Ex: Parent/Child/Child2 Returns Type Description System.String LinearMoveLocalTo(Transform, Vector3, Single) coroutine to move transform a localPosition to b using x units per second. Declaration public static IEnumerator LinearMoveLocalTo(this Transform transform, Vector3 target, float unitsPerSecond) Parameters Type Name Description Transform transform this Vector3 target target position System.Single unitsPerSecond units per second Returns Type Description IEnumerator LinearMoveTo(Transform, Vector3, Single) coroutine to move transform a position to b using x units per second. Declaration public static IEnumerator LinearMoveTo(this Transform transform, Vector3 target, float unitsPerSecond) Parameters Type Name Description Transform transform this Vector3 target target position System.Single unitsPerSecond units per second Returns Type Description IEnumerator RotateX(Transform, Single) Rotates the X axis of this transform by the amount given Declaration public static void RotateX(this Transform transform, float amount) Parameters Type Name Description Transform transform System.Single amount amount to rotate by RotateY(Transform, Single) Rotates the Y axis of this transform by the amount given Declaration public static void RotateY(this Transform transform, float amount) Parameters Type Name Description Transform transform System.Single amount amount to rotate by RotateZ(Transform, Single) Rotates the Z axis of this transform by the amount given Declaration public static void RotateZ(this Transform transform, float amount) Parameters Type Name Description Transform transform System.Single amount amount to rotate by SetLocalX(Transform, Single) Sets this transforms local x position Declaration public static void SetLocalX(this Transform transform, float x) Parameters Type Name Description Transform transform System.Single x SetLocalY(Transform, Single) sets this transforms local y position Declaration public static void SetLocalY(this Transform transform, float y) Parameters Type Name Description Transform transform System.Single y SetLocalZ(Transform, Single) sets this transforms local z position Declaration public static void SetLocalZ(this Transform transform, float z) Parameters Type Name Description Transform transform System.Single z SetRotation(Transform, Vector3) sets this transforms rotation to the given euler angle rotation Declaration public static void SetRotation(this Transform transform, Vector3 rotation) Parameters Type Name Description Transform transform Vector3 rotation SetX(Transform, Single) sets this transforms x position Declaration public static void SetX(this Transform transform, float x) Parameters Type Name Description Transform transform this System.Single x x value SetY(Transform, Single) sets this transforms y position Declaration public static void SetY(this Transform transform, float y) Parameters Type Name Description Transform transform System.Single y SetZ(Transform, Single) sets this transforms z position Declaration public static void SetZ(this Transform transform, float z) Parameters Type Name Description Transform transform System.Single z"
  },
  "api/GameJamStarterKit.UI.DataMemberType.html": {
    "href": "api/GameJamStarterKit.UI.DataMemberType.html",
    "title": "Enum DataMemberType | Game Jam Starter Kit Documentation",
    "keywords": "Enum DataMemberType The type of member to look for on a Namespace : GameJamStarterKit.UI Assembly : cs.temp.dll.dll Syntax public enum DataMemberType Fields Name Description Field Method Property"
  },
  "api/GameJamStarterKit.UI.html": {
    "href": "api/GameJamStarterKit.UI.html",
    "title": "Namespace GameJamStarterKit.UI | Game Jam Starter Kit Documentation",
    "keywords": "Namespace GameJamStarterKit.UI Classes KeybindButton Allows a key string to invoke the onClick of a UI.Button component PopupModal Popup modal component with a result callback. ProgressBar TabLayoutGroup This component will only allow 1 child to be active at a time. View The singleton root of a canvas view. Controls showing and hiding various child elements. Enums DataMemberType The type of member to look for on a KeyBindMode Defines when a key should activate"
  },
  "api/GameJamStarterKit.UI.KeybindButton.html": {
    "href": "api/GameJamStarterKit.UI.KeybindButton.html",
    "title": "Class KeybindButton | Game Jam Starter Kit Documentation",
    "keywords": "Class KeybindButton Allows a key string to invoke the onClick of a UI.Button component Inheritance System.Object KeybindButton Namespace : GameJamStarterKit.UI Assembly : cs.temp.dll.dll Syntax public class KeybindButton : MonoBehaviour Fields BindingMode When the keypress should activate Declaration public KeyBindMode BindingMode Field Value Type Description KeyBindMode Key The key to bind Declaration public string Key Field Value Type Description System.String"
  },
  "api/GameJamStarterKit.UI.KeyBindMode.html": {
    "href": "api/GameJamStarterKit.UI.KeyBindMode.html",
    "title": "Enum KeyBindMode | Game Jam Starter Kit Documentation",
    "keywords": "Enum KeyBindMode Defines when a key should activate Namespace : GameJamStarterKit.UI Assembly : cs.temp.dll.dll Syntax public enum KeyBindMode Fields Name Description OnKeyDown Activate a button press the frame a key is pressed down OnKeyUp Activate a button press the frame a key is released"
  },
  "api/GameJamStarterKit.UI.PopupModal.html": {
    "href": "api/GameJamStarterKit.UI.PopupModal.html",
    "title": "Class PopupModal | Game Jam Starter Kit Documentation",
    "keywords": "Class PopupModal Popup modal component with a result callback. Inheritance System.Object PopupModal Namespace : GameJamStarterKit.UI Assembly : cs.temp.dll.dll Syntax public class PopupModal : MonoBehaviour Fields OnResult Called by SendResult(Int32) Declaration public readonly UnityIntEvent OnResult Field Value Type Description UnityIntEvent Methods SendResult(Int32) Invokes OnResult , passing an integer to listeners Declaration public void SendResult(int value) Parameters Type Name Description System.Int32 value the value to send SetMessage(String) Sets the text message of the dialog popup Declaration public void SetMessage(string message) Parameters Type Name Description System.String message the message to display"
  },
  "api/GameJamStarterKit.UI.ProgressBar.html": {
    "href": "api/GameJamStarterKit.UI.ProgressBar.html",
    "title": "Class ProgressBar | Game Jam Starter Kit Documentation",
    "keywords": "Class ProgressBar Inheritance System.Object ProgressBar Namespace : GameJamStarterKit.UI Assembly : cs.temp.dll.dll Syntax public class ProgressBar : MonoBehaviour Fields Fill Declaration public Image Fill Field Value Type Description Image Properties Percent Declaration public float Percent { get; set; } Property Value Type Description System.Single"
  },
  "api/GameJamStarterKit.UI.TabLayoutGroup.html": {
    "href": "api/GameJamStarterKit.UI.TabLayoutGroup.html",
    "title": "Class TabLayoutGroup | Game Jam Starter Kit Documentation",
    "keywords": "Class TabLayoutGroup This component will only allow 1 child to be active at a time. Inheritance System.Object TabLayoutGroup Namespace : GameJamStarterKit.UI Assembly : cs.temp.dll.dll Syntax public class TabLayoutGroup : MonoBehaviour Methods SwitchTo(Int32) Switches to a tab by index Declaration public void SwitchTo(int index) Parameters Type Name Description System.Int32 index index of the tab SwitchTo(String) Switches to a tab by GameObject name Declaration public void SwitchTo(string objectName) Parameters Type Name Description System.String objectName name of the gameobject to switch to"
  },
  "api/GameJamStarterKit.UI.View.html": {
    "href": "api/GameJamStarterKit.UI.View.html",
    "title": "Class View | Game Jam Starter Kit Documentation",
    "keywords": "Class View The singleton root of a canvas view. Controls showing and hiding various child elements. Inheritance System.Object SingletonBehaviour < View > View Inherited Members SingletonBehaviour<View>.Instance SingletonBehaviour<View>.Awake() Namespace : GameJamStarterKit.UI Assembly : cs.temp.dll.dll Syntax public class View : SingletonBehaviour<View> Fields DialogModal The modal to show for ShowDialogPopup(String, Boolean, Boolean) Declaration public GameObject DialogModal Field Value Type Description GameObject InputBlocker Blocks input for anything behind this object Declaration public GameObject InputBlocker Field Value Type Description GameObject Methods CloseDialogPopup(Int32) Closes the active dialog popup if any. Declaration public void CloseDialogPopup(int _) Parameters Type Name Description System.Int32 _ HideInputBlocker() Hides the input blocker if it's active. Declaration public void HideInputBlocker() ShowDialogPopup(String, Boolean, Boolean) Opens the DialogModal with the message provided. Returns PopupModal to listen for results. Declaration public PopupModal ShowDialogPopup(string message, bool blockInputBehind = true, bool closeOnSelection = true) Parameters Type Name Description System.String message the message to show in the dialog System.Boolean blockInputBehind should input behind this popup be blocked System.Boolean closeOnSelection automatically closes the modal when a selection is made. Returns Type Description PopupModal returns the int return code from the dialog window. ShowInputBlockerBehind(Transform) Moves the input blocker to be behind the passed transform Declaration public void ShowInputBlockerBehind(Transform tr = null) Parameters Type Name Description Transform tr the transform to move behind. If null, the input blocker will be the top layer (blocking everything)"
  },
  "api/GameJamStarterKit.UnscaledTimeSince.html": {
    "href": "api/GameJamStarterKit.UnscaledTimeSince.html",
    "title": "Struct UnscaledTimeSince | Game Jam Starter Kit Documentation",
    "keywords": "Struct UnscaledTimeSince Measures unscaled time since this struct was initialized. Implicitly converts to a float. Example: UnscaledTimeSince timeSinceStart = 0f will measure the unscaled time since the moment timeSinceStart was initialized Usage: ( timeSinceStart > 10f ) { // it's been more than 10 unscaled seconds! }; https://garry.tv/2018/01/16/timesince/ Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public struct UnscaledTimeSince Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(UnscaledTimeSince to Single) Declaration public static implicit operator float (UnscaledTimeSince ts) Parameters Type Name Description UnscaledTimeSince ts Returns Type Description System.Single Implicit(Single to UnscaledTimeSince) Declaration public static implicit operator UnscaledTimeSince(float ts) Parameters Type Name Description System.Single ts Returns Type Description UnscaledTimeSince"
  },
  "api/GameJamStarterKit.VectorExtensions.html": {
    "href": "api/GameJamStarterKit.VectorExtensions.html",
    "title": "Class VectorExtensions | Game Jam Starter Kit Documentation",
    "keywords": "Class VectorExtensions Useful Vector Extensions Inheritance System.Object VectorExtensions Namespace : GameJamStarterKit Assembly : cs.temp.dll.dll Syntax public static class VectorExtensions Methods AddX(Vector2, Single) Adds a value to this Vector2's X axis Declaration public static Vector2 AddX(this Vector2 v, float x) Parameters Type Name Description Vector2 v this System.Single x the value to add Returns Type Description Vector2 the Vector2 with the modified X AddX(Vector3, Single) Adds a value to this Vector3's X axis Declaration public static Vector3 AddX(this Vector3 v, float x) Parameters Type Name Description Vector3 v this System.Single x the value to add Returns Type Description Vector3 the vector3 with the modified X AddY(Vector2, Single) Adds a value to this Vector2's Y axis Declaration public static Vector2 AddY(this Vector2 v, float y) Parameters Type Name Description Vector2 v this System.Single y the value to add Returns Type Description Vector2 the Vector2 with the modified Y AddY(Vector3, Single) Adds a value to this Vector3's Y axis Declaration public static Vector3 AddY(this Vector3 v, float y) Parameters Type Name Description Vector3 v this System.Single y the value to add Returns Type Description Vector3 the vector3 with the modified Y AddZ(Vector3, Single) Adds a value to this Vector3's Z axis Declaration public static Vector3 AddZ(this Vector3 v, float z) Parameters Type Name Description Vector3 v this System.Single z Returns Type Description Vector3 the vector3 with the modified Z AsVector3WithZ(Vector2, Single) returns this as a new Vector3 with the given z Declaration public static Vector3 AsVector3WithZ(this Vector2 v, float z) Parameters Type Name Description Vector2 v System.Single z Returns Type Description Vector3 DirectionTo(Vector2, Vector2) Gets the direction vector from this vector3 to the other. Declaration public static Vector2 DirectionTo(this Vector2 v, Vector2 target) Parameters Type Name Description Vector2 v this vector Vector2 target target vector Returns Type Description Vector2 returns a normalized direction to the target DirectionTo(Vector3, Vector3) Gets the direction vector from this vector3 to the other. Declaration public static Vector3 DirectionTo(this Vector3 v, Vector3 target) Parameters Type Name Description Vector3 v this vector Vector3 target target vector Returns Type Description Vector3 returns a normalized direction to the target DistanceTo(Vector2, Vector2) Get the distance to the target Declaration public static float DistanceTo(this Vector2 v, Vector2 target) Parameters Type Name Description Vector2 v this Vector2 target target to get the distance to Returns Type Description System.Single returns the distance to the target using Vector2.Distance DistanceTo(Vector3, Vector3) Get the distance to the target Declaration public static float DistanceTo(this Vector3 v, Vector3 target) Parameters Type Name Description Vector3 v this Vector3 target target to get the distance to Returns Type Description System.Single returns the distance to the target using Vector3.Distance ReprojectRelativeTo(Vector2, Vector2, Vector2) Reproject this Vector2's relative position to to be relative to Declaration public static Vector2 ReprojectRelativeTo(this Vector2 v, Vector2 currentTarget, Vector2 newTarget) Parameters Type Name Description Vector2 v this Vector2 currentTarget current position this Vector3 is relative to Vector2 newTarget he target position to reproject as relative to Returns Type Description Vector2 returns this Vector2 reprojected to be relative to the Vector2 rather than the Vector2 ReprojectRelativeTo(Vector3, Vector3, Vector3) Reproject this Vector3's relative position to to be relative to Declaration public static Vector3 ReprojectRelativeTo(this Vector3 v, Vector3 currentTarget, Vector3 newTarget) Parameters Type Name Description Vector3 v this Vector3 currentTarget current position this Vector3 is relative to Vector3 newTarget he target position to reproject as relative to Returns Type Description Vector3 returns this Vector3 reprojected to be relative to the Vector3 rather than the Vector3 ToQuaternion(Vector3) use this vector to make a euler angle quaternion Declaration public static Quaternion ToQuaternion(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Quaternion ToVector2Int(Vector2) Converts a Vector2 to a Vector2Int Declaration public static Vector2Int ToVector2Int(this Vector2 v) Parameters Type Name Description Vector2 v the Vector2 to convert Returns Type Description Vector2Int returns a new Vector2Int using the values of the given Vector2 ToVector3Int(Vector3) Converts a Vector3 to a Vector3Int Declaration public static Vector3Int ToVector3Int(this Vector3 v) Parameters Type Name Description Vector3 v the Vector3 to convert Returns Type Description Vector3Int returns a new Vector3Int using the values of the given Vector3 WithX(Vector2, Single) sets a Vector2 to the given x Declaration public static Vector2 WithX(this Vector2 v, float x) Parameters Type Name Description Vector2 v this System.Single x the value to set x to Returns Type Description Vector2 the vector2 with the modified X WithX(Vector3, Single) sets a Vector3 to the given x Declaration public static Vector3 WithX(this Vector3 v, float x) Parameters Type Name Description Vector3 v this System.Single x the value to set x to Returns Type Description Vector3 the vector3 with the modified X WithY(Vector2, Single) sets a Vector2 to the given y Declaration public static Vector2 WithY(this Vector2 a, float y) Parameters Type Name Description Vector2 a System.Single y the value to set y to Returns Type Description Vector2 the vector2 with the modified Y WithY(Vector3, Single) sets a Vector3 to the given y Declaration public static Vector3 WithY(this Vector3 v, float y) Parameters Type Name Description Vector3 v this System.Single y the value to set y to Returns Type Description Vector3 the vector3 with the modified Y WithZ(Vector3, Single) sets a Vector3 to the given z Declaration public static Vector3 WithZ(this Vector3 v, float z) Parameters Type Name Description Vector3 v this System.Single z the value to set z to Returns Type Description Vector3 the vector3 with the modified Z XY(Vector3) Get a Vector2 of the X and Y of this Vector3 Declaration public static Vector2 XY(this Vector3 v) Parameters Type Name Description Vector3 v this Returns Type Description Vector2 returns a Vector2 of the X and Y of a given Vector3"
  },
  "guides/Getting_Started.html": {
    "href": "guides/Getting_Started.html",
    "title": "Installation | Game Jam Starter Kit Documentation",
    "keywords": "Installation Ensure you have git https://git-scm.com/ If you're starting a brand new project, don't wanna mess with upm, and just want the entire project right away download the latest release if you want to use UPM then >= 2019.3 1) Open the package manager Window > Package Manager 2) Click the + in the top left 3) Click Add package from git URL... 4) paste https://github.com/ajseward/GameJamStarterKit.git#upm and hit enter 5) done! <=2019.2 1) Locate Packages\\manifest.json in your root project folder (the folder that has your assets folder in it). 2) Open with a text editor 3) under \"dependencies add \"com.aseward.game-jam-starter-kit\": \"https://github.com/ajseward/GameJamStarterKit.git#upm\" 4) It should look like this { \"dependencies\": { \"com.aseward.game-jam-starter-kit\": \"https://github.com/ajseward/GameJamStarterKit.git#upm\", // a bunch of other packages } } Restart / launch unity, and that's it! What now? Check out the in-editor tool to setup your initial project structure and more. Tools > GameJamStarterKit How do I edit prefabs? To modify the prefab instance, you can place them in your scene from the packages/GameJamStarterKit/ folder (below your assets folder, you may need to scroll) in the content browser. To edit the prefab directly, you can 'copy' them to your project by dragging the prefab from the packages folder to your assets folder. My UPM doesn't support git urls! for <=2018.2 package manager does not support git urls. Your best bet is either upgrading to >=2018.3 or downloading the latest release version how do I update git UPM packages!? UPM locks to whatever the latest commit was when you added the project. >=2019.3 if you already have Packages\\packages-lock.json , delete the file and unity should update to the latest version for all your git packages. if you do not have packages-lock.json continue Add this to your Packages\\manifest.json after \"dependencies\": { ... } \"enableLockFile\": true, \"resolutionStrategy\": \"highest\", If there is a \"lock:\" { ... } section, delete it. so your Packages\\manifest.json looks like this { \"dependencies\": { \"com.aseward.game-jam-starter-kit\": \"https://github.com/ajseward/GameJamStarterKit.git#upm\", }, \"enableLockFile\": true, \"resolutionStrategy\": \"highest\", } What did I just do? This forces UPM to use a packages-lock.json file in the future. essentially a file for that \"lock:\" { ... } section. If you removed the \"lock\": { ... } section, or didn't have it, you should be safe to open unity and it will update to the latest version of the git package. In the future, delete Packages\\packages-lock.json and it should update your git packages. <=2019.2 In Packages\\manifest.json locate the section for \"lock\": { ... } . It will look something like this \"lock\": { \"com.aseward.game-jam-starter-kit\": { \"hash\": \"b93a03f45e25e075987d50157ffe0c0960607aa6\", \"revision\": \"HEAD\" } remove the entire section, save, and start unity."
  },
  "index.html": {
    "href": "index.html",
    "title": "Game Jam Starter Kit | Game Jam Starter Kit Documentation",
    "keywords": "Game Jam Starter Kit Game Jam Starter Kit is a collection of useful extensions, systems, and assets designed to help teams avoid writing boilerplate, or wasting time making throw away placeholder assets. What Game Jam Starter Kit isn't This is not a collection of pre-made games, gameplay systems, or other 'game in a box' style tools. Jam Kit is intended to help you make a game from scratch. How can I get it? Ensure you have git https://git-scm.com/ Use the unity package manager to install from the git URL https://github.com/ajseward/GameJamStarterKit.git#upm My UPM doesn't support git urls! for <=2018.2 package manager does not support git urls. Your best bet is either upgrading to >=2018.3 or downloading a release version . how do I update git UPM packages!? UPM locks to whatever the latest commit was when you added the project. This may be different in future versions of unity. This was last tested with 2019.3 >=2019.3 if you already have Packages\\packages-lock.json , delete the file and unity should update to the latest version for all your git packages. if you do not have packages-lock.json continue Add this to your Packages\\manifest.json after \"dependencies\": { ... } \"enableLockFile\": true, \"resolutionStrategy\": \"highest\", If there is a \"lock:\" { ... } section, delete it. so your Packages\\manifest.json looks like this { \"dependencies\": { \"com.aseward.game-jam-starter-kit\": \"https://github.com/ajseward/GameJamStarterKit.git#upm\", }, \"enableLockFile\": true, \"resolutionStrategy\": \"highest\", } What did I just do? This forces UPM to use a packages-lock.json file in the future. essentially a file for that \"lock:\" { ... } section. If you removed the \"lock\": { ... } section, or didn't have it, you should be safe to open unity and it will update to the latest version of the git package. In the future, delete Packages\\packages-lock.json and it should update your git packages. Links Github - Issue Tracker"
  },
  "modules/Audio.html": {
    "href": "modules/Audio.html",
    "title": "Core | Game Jam Starter Kit Documentation",
    "keywords": "Core GameJamStarterKit.Audio is a package with useful audiio clips, components, pools, and other utilities to help with implementing audio features in a small scope game. Features AudioPool - Subclass of Core.BasePool providing an easy way to play 2d and 3d audio clips anywhere. Persistent/BackgroundMusic provides a simple class to play single background music clips / ClipCollections, either persisting through scene change or not. Audio Pool Example public class MyObject : MonoBehaviour { // set this in inspector public AudioClip Sound; private void MakeNoise() { AudioPool.Instance.Play3D(Sound, transform.position); } private void Make2DNoise() { AudioPool.Instance.Play2D(Sound); } } NOTE If you plan to use AudioPool, it is recommended to initialize it in an awake somewhere with AudioPool.GetNext() . For Example: public class MySetupClass : MonoBehaviour { private void Awake() { // ensure audio pool is cached AudioPool.Instance.GetNext(); } }"
  },
  "modules/Camera.html": {
    "href": "modules/Camera.html",
    "title": "Camera | Game Jam Starter Kit Documentation",
    "keywords": "Camera GameJamStarterKit.Camera contains useful components and extensions relating to the game Camera. Both 2D and 3D games will probably find something useful inside. Features SpringArmComponent similar to Unreal Engine 4's spring arm component. CameraShake System. Allows for saving shake profiles for use in animation, as well as one-off code based shakes. Creating a Camera Shake You can call CameraShakeProfile.MakeProfile() and pass it into CameraShaker.StartShake(profile) , or call it directly on a Camera object with Camera.StartShake(profile) To create a persistent profile, right click in the asset browser, and select GameJamStarterKit > Camera > Create CameraShake Profile . Pass this profile into a CameraShaker component and call CameraShaker.StartShake() to use the attached profile."
  },
  "modules/Core.html": {
    "href": "modules/Core.html",
    "title": "Core | Game Jam Starter Kit Documentation",
    "keywords": "Core GameJamStarterKit.Core contains the core functionality for GameJamStarterKit. Many useful classes, extensions, and tools reside in this namespace. Core is a dependency for nearly every module in GameJamStarterKit Features Serializable Animation Parameter Class AnimatorEventBridge to allow animations to call UnityEvents. Various useful extension methods. See Documentation. AudioClipCollection - a collection of audio clips to get in sequence or randomly using GetClip() AudioSourceCallback - provides callback evnets for an attached audio source. Singletons - various types of singleton base classes to get setup quickly. BasePool - Provides a base for creating a pool of a component type Kit Utility Classes - Various debug / math / scene maangement additions. Pre-made UnityEvents for most types that might be useful. TimeSince / UnscaledTimeSince - Useful time measurement structs from garry.tv"
  },
  "modules/Currency.html": {
    "href": "modules/Currency.html",
    "title": "Currency | Game Jam Starter Kit Documentation",
    "keywords": "Currency GameJamStarterKit.Currency is a set of components and utilities to create a basic currency system. Features Wallet component for storing currency on a game object IBuyable and ISellable interfaces, as well as default implementation drop-in components. Serializable currency type to represent multiple types of currency. (gold, silver, wood, rocks, etc...)"
  },
  "modules/FX_System.html": {
    "href": "modules/FX_System.html",
    "title": "FX System | Game Jam Starter Kit Documentation",
    "keywords": "FX System GameJamStarterKit.FXSystem is a system designed to allow artists and programmers to work together on animations and events without the hassle of writing single purpose scripts or weird timing coroutines. Features Various useful functions to be called from Animators. FX Units - Define a GameObject as an FX allowing it to be spawned and controlled by an FX Spawner. FX Spawner - A GameObject responsible for creating FX Units. Usually tied to an animation or other script. Signalling - A Method to block code execution until a signal is raised either by an animation or other code. Example Signalling Signaller s = myActor.GetComponent<Signaller>(); myActor.TransitionIn(); yield return s.WaitForSignal(\"Unblock\"); // animation plays, and raises the signal Unblock myActor.TransitionOut();"
  },
  "modules/Health_System.html": {
    "href": "modules/Health_System.html",
    "title": "Health System | Game Jam Starter Kit Documentation",
    "keywords": "Health System GameJamStarterKit.HealthSystem is a module designed to implement an easy to use and hassle free health system. While limited in functionality, it should provide a good base to begin writing a more complex system. Features Extension Methods for GameObject to damage / heal an object. Drop in health component. Damage Type system to allow for complex interactions, such as weakness to types etc..."
  },
  "modules/Modifiers.html": {
    "href": "modules/Modifiers.html",
    "title": "Modifiers | Game Jam Starter Kit Documentation",
    "keywords": "Modifiers GameJamStarterKit.Modifiers is a system to create modifiable fields, and a buff / debuff system. How it works Declare a new modifier public ModifiableValue<float> MyFloat = 10f; Create a modifier for it var modifier = ValueModifier<float>(initialValue => { return initialValue + 10; }); add the modifier to MyFloat MyFloat.AddModifier(modifier); Now MyFloat = 20f so long as modifier is added. Remove modifier MyFloat.RemoveModifier(modifier); Seeing ModifiableValue<T> in the inspector 2020.1 or higher ModifiableValue<T> should display properly since 2020.1 adds support for generics in the inspector. 2019.3 or less There are many ways to work around it without creating extra bloat. The easiest solution imo is to declare an initial value and use it to initialize your ModifiableValue<T> on awake. Example: public ModifiableValue<float> MyFloat; [SerializeField] private float _myFloatInitialValue; private void Awake() { MyFloat = _myFloatInitialValue; } which thanks to implicit operators, essentially calls new ModifiableValue<float>(_myFloatInitialValue); . Just ensure no modifiers are added before the initial value is setup or put the script at the top of your execution order. Examples Creating a buff that increases speed for a duration. (Sprint) public class MyCharacter : MonoBehaviour { public ModifiableValue<float> Speed; // to get BaseSpeed in the inspector this is necessary unless on 2020.1 or higher [SerializeField] private float BaseSpeed = 8f; private ValueModifier<float> _sprintModifier; private void Awake() { // increase speed by 2x for 2 seconds. _speedModifier = new ValueModifier<float>(speed => speed * 2f, 2f); Speed = BaseSpeed; } public void Sprint() { Speed.AddModifier(_speedModifier); } public void StopSprint() { Speed.RemoveModifier(_speedModifier); } } But wait, what if the player finds a way to call that more than once? Replace Speed.AddModifier(_speedModifier); // and Speed.RemoveModifier(_speedModifier); with Speed.AddKeyedModifier(_speedModifier, \"sprint\"); // and Speed.RemoveKeyedModifier(\"sprint\"); which will only allow 1 modifier for the key given."
  },
  "modules/UI.html": {
    "href": "modules/UI.html",
    "title": "UI | Game Jam Starter Kit Documentation",
    "keywords": "UI GameJamStarterKit.UI is a collection of useful prefabs and other various UI elements. Features Tabular menu component Canvas manager Interpolated Text for text mesh pro components. (display variables / method return values live in the ui) How to use Tabs Attach TabLayoutGroup to a parent GameObject. Any UI GameObject attached to this group will have it's enabled status controlled by TabLayoutGroup.SwitchTo Canvas Management In UI/Prefabs you'll find a KitCanvasBase which can be used as a base for your game's UI. This comes preconfigured with some common settings and has a UI.View component attached. UI.View View is a singleton which is used to manage the canvas without knowing about everything on the canvas. Currently it has ShowPopupDialog to draw a quick dialog window with an int event callback for when the dialog is closed. Editing the prefabs To modify the prefab instance, you can place them in your scene from the packages/GameJamStarterKit/UI/Prefabs folder (below your assets folder, you may need to scroll) in the content browser. To edit the prefab directly, you can 'copy' them to your project by dragging the prefab from the packages folder to your assets folder. using the InterpolatedText component Checkout the example scene in UI\\Samples"
  }
}